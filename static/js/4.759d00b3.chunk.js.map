{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","hoc/withAuthRedirect.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/Status/Status.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["requiredField","value","undefined","maxLength","max","length","FormControl","meta","touched","error","children","hasError","className","st","formControl","TextArea","props","input","restProps","child","Input","createField","name","type","component","placeholder","validate","module","exports","withAuthRedirect","Component","connect","state","isAuth","auth","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","Post","post","item","photo","src","alt","message","btn","likeCount","maxLength100","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","textArea","MyPostsContainer","postsData","profile","addPost","myposts","title","formData","newPost","posts","map","id","Status","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","defaultValue","onBlur","updateProfileStatus","onChange","event","target","onDoubleClick","console","log","ProfileInfo","isOwner","savePhoto","Preloader","info","description","avatar","photos","large","e","files","lenght","fullName","text","aboutMe","contacts","facebook","link","href","website","vk","twitter","instagram","youtube","github","mainLink","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getProfileInfo","getProfileStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/4.759d00b3.chunk.js","sourcesContent":["export const requiredField = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    return value && value.length > max ? `Max length is ${max} symbols` : undefined\r\n}","import React from 'react'\r\nimport st from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${st.formControl} ${hasError && st.error}`}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (className, name, type, component, placeholder, validate) => {\r\n    return <Field\r\n        className={className}\r\n        name={name}\r\n        type={type}\r\n        component={component}\r\n        placeholder={placeholder}\r\n        validate={validate}/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__M0W-4\",\"error\":\"FormsControls_error__2fNsK\"};","import React from 'react'\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        };\r\n    };\r\n\r\n    const RedirectComponent = (props) => {\r\n        return !props.isAuth\r\n            ? <Redirect to=\"/login\" />\r\n            : <Component {...props} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__2869F\",\"title\":\"MyPosts_title__1V49T\",\"textArea\":\"MyPosts_textArea__2qX7E\",\"btn\":\"MyPosts_btn__1CtxC\",\"form\":\"MyPosts_form__2K55A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1xeZn\",\"item\":\"Post_item__1qbBJ\",\"photo\":\"Post_photo__1kzoD\",\"btn\":\"Post_btn__2wcP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__1iMuy\",\"description\":\"ProfileInfo_description__2Vn_M\",\"avatar\":\"ProfileInfo_avatar__v0QMI\",\"title\":\"ProfileInfo_title__cSU_W\",\"text\":\"ProfileInfo_text__riMmS\",\"link\":\"ProfileInfo_link__36UG7\"};","import React from \"react\";\r\nimport st from \"./Post.module.css\";\r\n\r\nexport default function Post(props) {\r\n    return (\r\n      <div className={st.post}>\r\n        <div className={st.item}>\r\n          <img\r\n            className={st.photo}\r\n            src=\"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\"\r\n            alt=\"Avatar example\"\r\n          ></img>\r\n          <p>{props.message}</p>\r\n        </div>\r\n        <button className={st.btn}>Like {props.likeCount}</button>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { requiredField, maxLength } from '../../../utils/validators/validators';\r\nimport { TextArea } from '../../common/FormsControls/FormsControls';\r\nimport st from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\n\r\nexport default function MyPosts(props) {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.addPost(formData.newPost);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={st.myposts}>\r\n        <h2 className={st.title}>MY POSTS</h2>\r\n        <MyPostReduxForm\r\n          onSubmit={onSubmit}\r\n        />\r\n      </div>\r\n      <div className={st.posts}>\r\n        {props.postsData.map((item) => (\r\n          <Post\r\n            key={item.id}\r\n            message={item.message}\r\n            likeCount={item.likeCount}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nconst MyPostForm = (props) => {\r\n  return (<form onSubmit={props.handleSubmit} className={st.form}>\r\n    <Field\r\n      placeholder=\"Start your story...\"\r\n      className={st.textArea}\r\n      component={TextArea}\r\n      name=\"newPost\"\r\n      validate={[requiredField, maxLength100]}\r\n    >\r\n    </Field>\r\n    <button className={st.btn}>\r\n      Add post\r\n    </button>\r\n  </form>)\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: \"myPost\" })(MyPostForm);\r\n","import { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profile.postsData,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nexport default function Status(props) {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        console.log(props.status);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateProfileStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    return (\r\n        <>\r\n            {!editMode\r\n                ? <span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span>\r\n                : <input\r\n                    autoFocus={true}\r\n                    defaultValue={status}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                />}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport st from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Status from \"./Status/Status\";\r\n\r\nexport default function ProfileInfo({profile, updateProfileStatus, status, isOwner, savePhoto}) {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.lenght) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n  return (\r\n    <div className={st.info}>\r\n      <div className={st.description}>\r\n      <img\r\n        className={st.avatar}\r\n        src={\r\n          profile.photos.large\r\n            ? profile.photos.large\r\n            : \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\"\r\n        }\r\n        alt=\"Avatar\"\r\n        />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n        <h1 className={st.title}>{profile.fullName}</h1>\r\n        <p className={st.text}>{profile.aboutMe}</p>\r\n        <p className={st.text}>\r\n          <Status\r\n            updateProfileStatus={updateProfileStatus}\r\n            status={status}\r\n          />\r\n        </p>\r\n      </div>\r\n      <ul>\r\n        <h3>Contacts:</h3>\r\n        {profile.contacts.facebook && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.facebook}>Facebook</a>\r\n          </li>\r\n        )}\r\n        {profile.contacts.website && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.website}>Website</a>\r\n          </li>\r\n        )}\r\n        {profile.contacts.vk && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.vk}>VK</a>\r\n          </li>\r\n        )}\r\n        {profile.contacts.twitter && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.twitter}>Twitter</a>\r\n          </li>\r\n        )}\r\n        {profile.contacts.instagram && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.instagram}>Instagram</a>\r\n          </li>\r\n        )}\r\n        {profile.contacts.youtube && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.youtube}>Youtube</a>\r\n          </li>\r\n        )}\r\n        {profile.contacts.github && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.github}>Github</a>\r\n          </li>\r\n        )}\r\n        {profile.contacts.mainLink && (\r\n          <li>\r\n            <a className={st.link} href={profile.contacts.mainLink}>Main Link</a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport st from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nexport default function Profile(props) {\r\n    return (\r\n      <div>\r\n        <ProfileInfo\r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateProfileStatus={props.updateProfileStatus}\r\n          isOwner={props.isOwner}\r\n          savePhoto={props.savePhoto}\r\n        />\r\n        <MyPostsContainer />\r\n      </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfileInfo, getProfileStatus, updateProfileStatus, savePhoto } from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    userId === undefined ? userId = this.props.authorizedUserId : userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n    this.props.getProfileInfo(userId);\r\n    this.props.getProfileStatus(userId);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.userId != this.props.match.params.userId);\r\n    this.refreshProfile();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          isOwner={!this.props.match.params.userId}\r\n          savePhoto={this.props.savePhoto}\r\n        />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getProfileInfo, getProfileStatus, updateProfileStatus, savePhoto}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}