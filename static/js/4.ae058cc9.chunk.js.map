{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/Status/Status.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["FormControl","meta","touched","error","children","hasError","className","st","formControl","TextArea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","module","exports","requiredField","value","undefined","maxLength","max","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","withAuthRedirect","Component","connect","state","isAuth","auth","to","Post","message","likeCount","post","item","photo","src","alt","btn","maxLength100","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","textArea","MyPostsContainer","postsData","profile","addPost","myposts","title","formData","newPost","posts","map","id","Status","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","defaultValue","onBlur","updateProfileStatus","onChange","event","target","onDoubleClick","console","log","handleSumbit","style","formSummaryError","type","keys","contacts","key","contact","ProfileInfo","isOwner","savePhoto","saveProfile","Preloader","avatar","photos","large","e","files","lenght","initialValues","then","goToEditMode","ProfileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getProfileInfo","getProfileStatus","refreshProfile","prevProps","React","compose","withRouter"],"mappings":"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","file":"static/js/4.ae058cc9.chunk.js","sourcesContent":["import React from 'react'\r\nimport st from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${st.formControl} ${hasError && st.error}`}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\", className) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                className={className}\r\n                name={name}\r\n                component={component}\r\n                placeholder={placeholder}\r\n                validate={validators}\r\n                {...props} /> {text}\r\n        </div>)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__M0W-4\",\"error\":\"FormsControls_error__2fNsK\"};","export const requiredField = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    return value && value.length > max ? `Max length is ${max} symbols` : undefined\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        };\r\n    };\r\n\r\n    const RedirectComponent = (props) => {\r\n        return !props.isAuth\r\n            ? <Redirect to=\"/login\" />\r\n            : <Component {...props} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__v0QMI\",\"contact\":\"ProfileInfo_contact__1cK74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__2869F\",\"title\":\"MyPosts_title__1V49T\",\"textArea\":\"MyPosts_textArea__2qX7E\",\"btn\":\"MyPosts_btn__1CtxC\",\"form\":\"MyPosts_form__2K55A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1xeZn\",\"item\":\"Post_item__1qbBJ\",\"photo\":\"Post_photo__1kzoD\",\"btn\":\"Post_btn__2wcP5\"};","import React from \"react\";\r\nimport st from \"./Post.module.css\";\r\n\r\ntype PropsType = {\r\n  message: string,\r\n  likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = ({message, likeCount}) => {\r\n    return (\r\n      <div className={st.post}>\r\n        <div className={st.item}>\r\n          <img\r\n            className={st.photo}\r\n            src=\"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\"\r\n            alt=\"Avatar example\"\r\n          ></img>\r\n          <p>{message}</p>\r\n        </div>\r\n        <button className={st.btn}>Like {likeCount}</button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { requiredField, maxLength } from '../../../utils/validators/validators';\r\nimport { TextArea } from '../../common/FormsControls/FormsControls';\r\nimport st from \"./MyPosts.module.css\";\r\nimport Post from './Post/Post';\r\n\r\nexport default function MyPosts(props) {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.addPost(formData.newPost);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={st.myposts}>\r\n        <h2 className={st.title}>MY POSTS</h2>\r\n        <MyPostReduxForm\r\n          onSubmit={onSubmit}\r\n        />\r\n      </div>\r\n      <div className={st.posts}>\r\n        {props.postsData.map((item) => (\r\n          <Post\r\n            key={item.id}\r\n            message={item.message}\r\n            likeCount={item.likeCount}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength100 = maxLength(100);\r\n\r\nconst MyPostForm = (props) => {\r\n  return (<form onSubmit={props.handleSubmit} className={st.form}>\r\n    <Field\r\n      placeholder=\"Start your story...\"\r\n      className={st.textArea}\r\n      component={TextArea}\r\n      name=\"newPost\"\r\n      validate={[requiredField, maxLength100]}\r\n    >\r\n    </Field>\r\n    <button className={st.btn}>\r\n      Add post\r\n    </button>\r\n  </form>)\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm({ form: \"myPost\" })(MyPostForm);\r\n","import { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postsData: state.profile.postsData,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {\r\n  addPost,\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useState, useEffect, ChangeEvent } from 'react'\r\n\r\ntype PropsType = {\r\n    status: string,\r\n    updateProfileStatus: (status: string) => void\r\n}\r\n\r\nconst Status: React.FC<PropsType> = (props) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [status, setStatus] = useState<string>(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        console.log(props.status);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateProfileStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    return (\r\n        <>\r\n            {!editMode\r\n                ? <><b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span></>\r\n                : <input\r\n                    autoFocus={true}\r\n                    defaultValue={status}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Status\r\n","import { reduxForm } from \"redux-form\";\r\nimport { createField, Input, TextArea } from \"../../../common/FormsControls/FormsControls\";\r\nimport st from \"../ProfileInfo.module.css\";\r\nimport style from '../../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({handleSumbit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSumbit}>\r\n            <div>\r\n                <div><button>Save</button></div>\r\n                {error && <div className={style.formSummaryError}>{error}</div>}\r\n                <div>\r\n                    <b>Full Name</b>: {createField(\"Full Name\", \"fullName\", [], Input)}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job</b>: {createField('', 'lookingForAJob', [], Input, {type: \"checkbox\"})}\r\n                </div>\r\n                <div>\r\n                    <b>My professional skils</b>: {createField('My professional skils', 'lookingForAJobDescription', [], TextArea)}\r\n                </div>\r\n                <div>\r\n                    <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], TextArea)}\r\n                </div>\r\n                {<div>\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => (\r\n                        <div key={key} className={st.contact}>\r\n                            <b>{key}</b>: {createField(key, `contacts.${key}`, [], Input)}\r\n                        </div>\r\n                    ))}\r\n                </div>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: 'edit-profile' })(ProfileDataForm);","import React, { useState } from \"react\";\r\nimport st from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Status from \"./Status/Status\";\r\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\nexport default function ProfileInfo({profile, updateProfileStatus, status, isOwner, savePhoto, saveProfile}) {\r\n  \r\n  const [editMode, setEditMode] = useState(false);\r\n  \r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.lenght) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n      <img\r\n        className={st.avatar}\r\n        src={\r\n          profile.photos.large\r\n            ? profile.photos.large\r\n            : \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\"\r\n        }\r\n        alt=\"Avatar\"\r\n        />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n          : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n        <Status\r\n            updateProfileStatus={updateProfileStatus}\r\n            status={status}\r\n          />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner &&\r\n        <div><button onClick={goToEditMode}>Edit</button></div>}\r\n      <div>\r\n        <b>Full Name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n        <div>\r\n          <b>My professional skils</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key => (\r\n          <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={st.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>)\r\n}\r\n\r\n","import React from 'react'\r\nimport st from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { ProfileType } from '../../types/types';\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null,\r\n  status: string,\r\n  updateProfileStatus: (status: string) => void,\r\n  isOwner: boolean,\r\n  savePhoto: (file: any) => void,\r\n  saveProfile: (profile: ProfileType) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return (\r\n      <div>\r\n        <ProfileInfo\r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateProfileStatus={props.updateProfileStatus}\r\n          isOwner={props.isOwner}\r\n          savePhoto={props.savePhoto}\r\n          saveProfile={props.saveProfile}\r\n        />\r\n        <MyPostsContainer />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Profile\r\n","import React, { Component } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfileInfo, getProfileStatus, updateProfileStatus, savePhoto, saveProfile } from \"../../redux/profileReducer\";\r\nimport { withRouter, RouteComponentProps } from \"react-router\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport {ProfileType} from '../../types/types'\r\nimport { AppStateType } from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n  profile: ProfileType | null,\r\n  status: string,\r\n  authorizedUserId: number | null,\r\n  isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getProfileInfo: (userId: number) => void,\r\n  getProfileStatus: (userId: number) => void,\r\n  updateProfileStatus: (status: string) => void,\r\n  savePhoto: (file: any) => void,\r\n  saveProfile: (profile: ProfileType) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n  refreshProfile() {\r\n    let userId: number | null = +this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        // todo: may be replace push with Redirect??\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    if (!userId) {\r\n      console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n    } else {\r\n      this.props.getProfileInfo(userId)\r\n      this.props.getProfileStatus(userId)\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if (prevProps.match.params.userId != this.props.match.params.userId) {\r\n      this.refreshProfile();\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          isOwner={!this.props.match.params.userId}\r\n          savePhoto={this.props.savePhoto}\r\n          saveProfile={this.props.saveProfile}\r\n        />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    profile: state.profile.profile,\r\n    status: state.profile.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { getProfileInfo, getProfileStatus, updateProfileStatus, savePhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}