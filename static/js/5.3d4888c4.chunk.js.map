{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","hoc/withAuthRedirect.js","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["requiredField","value","undefined","maxLength","max","length","FormControl","meta","touched","error","children","hasError","className","st","formControl","TextArea","props","input","restProps","child","Input","createField","name","type","component","placeholder","validate","module","exports","withAuthRedirect","Component","connect","state","isAuth","auth","to","Dialog","id","activeClassName","active","dialog","user","img","src","photo","alt","userName","Message","message","maxLength50","MessageReduxForm","reduxForm","form","add","onSubmit","handleSubmit","Field","textArea","btn","compose","dialogsData","messages","messagesData","sendMessage","dialogs","dialogsItems","map","item","formData","newMessage"],"mappings":"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","file":"static/js/5.3d4888c4.chunk.js","sourcesContent":["export const requiredField = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    return value && value.length > max ? `Max length is ${max} symbols` : undefined\r\n}","import React from 'react'\r\nimport st from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${st.formControl} ${hasError && st.error}`}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (className, name, type, component, placeholder, validate) => {\r\n    return <Field\r\n        className={className}\r\n        name={name}\r\n        type={type}\r\n        component={component}\r\n        placeholder={placeholder}\r\n        validate={validate}/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__M0W-4\",\"error\":\"FormsControls_error__2fNsK\"};","import React from 'react'\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        };\r\n    };\r\n\r\n    const RedirectComponent = (props) => {\r\n        return !props.isAuth\r\n            ? <Redirect to=\"/login\" />\r\n            : <Component {...props} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__24Zhq\",\"active\":\"Dialog_active__XkXzf\",\"user\":\"Dialog_user__35ZuG\",\"img\":\"Dialog_img__37Hiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__37K0U\",\"dialogsItems\":\"Dialogs_dialogsItems__2XYIc\",\"add\":\"Dialogs_add__Gvkj9\",\"textArea\":\"Dialogs_textArea__pcLzF\",\"btn\":\"Dialogs_btn__34GFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2Wplz\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport st from \"./Dialog.module.css\";\r\n\r\nexport default function Dialog(props) {\r\n  return (\r\n    <NavLink\r\n      to={`/dialogs/${props.id}`}\r\n      activeClassName={st.active}\r\n      className={st.dialog}\r\n    >\r\n      <div className={st.user}>\r\n        <img className={st.img} src={props.photo} alt=\"Avatar example\"></img>\r\n        {props.userName}\r\n      </div>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport st from \"./Message.module.css\";\r\n\r\nexport default function Message(props) {\r\n  return (\r\n      <div className={st.message}>{props.message}</div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport st from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { maxLength, requiredField } from \"../../utils/validators/validators\";\r\nimport { TextArea } from \"../common/FormsControls/FormsControls\";\r\n\r\nexport default function Dialogs(props) {\r\n\r\n  const onSubmit = (formData) => {\r\n    props.sendMessage(formData.newMessage);\r\n  }\r\n\r\n  return (\r\n    <div className={st.dialogs}>\r\n      <div className={st.dialogsItems}>\r\n        {props.dialogsData.map((item) => (\r\n          <Dialog\r\n            key={item.id}\r\n            id={item.id}\r\n            userName={item.userName}\r\n            photo={item.photo}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={st.messages}>\r\n        {props.messagesData.map((item) => (\r\n          <Message key={item.id} message={item.message} />\r\n        ))}\r\n        <MessageReduxForm onSubmit={onSubmit}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength50 = maxLength(50);\r\n\r\nconst MessageForm = (props) => {\r\n  return (\r\n    <form className={st.add} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={TextArea}\r\n        className={st.textArea}\r\n        placeholder=\"Your message...\"\r\n        name=\"newMessage\"\r\n        validate={[requiredField, maxLength50]}\r\n      ></Field>\r\n      <button className={st.btn}>\r\n        Send message\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: \"message\" })(MessageForm);\r\n","import { sendMessage } from \"../../redux/messagesReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.messages.dialogsData,\r\n    messagesData: state.messages.messagesData,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}