{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.js"],"names":["FormControl","meta","touched","error","children","hasError","className","st","formControl","TextArea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","module","exports","requiredField","value","undefined","maxLength","max","length","withAuthRedirect","Component","connect","state","isAuth","auth","to","Dialog","id","userName","photo","activeClassName","active","dialog","user","img","src","alt","Message","message","maxLength50","MessageReduxForm","reduxForm","form","add","onSubmit","handleSubmit","Field","textArea","btn","Dialogs","dialogs","dialogsItems","dialogsData","map","item","messages","messagesData","formData","sendMessage","newMessage","compose"],"mappings":"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","file":"static/js/5.cea19c67.chunk.js","sourcesContent":["import React from 'react'\r\nimport st from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${st.formControl} ${hasError && st.error}`}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\", className) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                className={className}\r\n                name={name}\r\n                component={component}\r\n                placeholder={placeholder}\r\n                validate={validators}\r\n                {...props} /> {text}\r\n        </div>)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__M0W-4\",\"error\":\"FormsControls_error__2fNsK\"};","export const requiredField = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    return value && value.length > max ? `Max length is ${max} symbols` : undefined\r\n}","import React from 'react'\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n        };\r\n    };\r\n\r\n    const RedirectComponent = (props) => {\r\n        return !props.isAuth\r\n            ? <Redirect to=\"/login\" />\r\n            : <Component {...props} />\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__24Zhq\",\"active\":\"Dialog_active__XkXzf\",\"user\":\"Dialog_user__35ZuG\",\"img\":\"Dialog_img__37Hiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__37K0U\",\"dialogsItems\":\"Dialogs_dialogsItems__2XYIc\",\"add\":\"Dialogs_add__Gvkj9\",\"textArea\":\"Dialogs_textArea__pcLzF\",\"btn\":\"Dialogs_btn__34GFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2Wplz\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport st from \"./Dialog.module.css\";\r\n\r\ntype ProsType = {\r\n  id: number\r\n  userName: string\r\n  photo: string\r\n}\r\n\r\nconst Dialog: React.FC<ProsType> = ({id, userName, photo}) => {\r\n  return (\r\n    <NavLink\r\n      to={`/dialogs/${id}`}\r\n      activeClassName={st.active}\r\n      className={st.dialog}\r\n    >\r\n      <div className={st.user}>\r\n        <img className={st.img} src={photo} alt=\"Avatar example\"></img>\r\n        {userName}\r\n      </div>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default Dialog;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport st from \"./Message.module.css\";\r\n\r\ntype PropsType = {\r\n  message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = ({message}) => {\r\n  return (\r\n      <div className={st.message}>{message}</div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport st from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { maxLength, requiredField } from \"../../utils/validators/validators\";\r\nimport { TextArea } from \"../common/FormsControls/FormsControls\";\r\nimport {DialogType, MessageType } from '../../types/types'\r\n\r\ntype DialogsPropsType = {\r\n  dialogsData: DialogType[],\r\n  messagesData: MessageType[],\r\n  sendMessage: (newMessage: string) => void\r\n}\r\n\r\ntype FormDataType = {\r\n  newMessage: string\r\n}\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n  const onSubmit: any = (formData: FormDataType) => {\r\n    props.sendMessage(formData.newMessage);\r\n  }\r\n\r\n  return (\r\n    <div className={st.dialogs}>\r\n      <div className={st.dialogsItems}>\r\n        {props.dialogsData.map((item) => (\r\n          <Dialog\r\n            key={item.id}\r\n            id={item.id}\r\n            userName={item.userName}\r\n            photo={item.photo}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={st.messages}>\r\n        {props.messagesData.map((item) => (\r\n          <Message key={item.id} message={item.message} />\r\n        ))}\r\n        <MessageReduxForm onSubmit={onSubmit}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength50 = maxLength(50);\r\n\r\nconst MessageForm: React.FC<InjectedFormProps> = (props) => {\r\n  return (\r\n    <form className={st.add} onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={TextArea}\r\n        className={st.textArea}\r\n        placeholder=\"Your message...\"\r\n        name=\"newMessage\"\r\n        validate={[requiredField, maxLength50]}\r\n      ></Field>\r\n      <button className={st.btn}>\r\n        Send message\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MessageReduxForm = reduxForm({ form: \"message\" })(MessageForm);\r\n\r\nexport default Dialogs;\r\n","import { sendMessage } from \"../../redux/messagesReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.messages.dialogsData,\r\n    messagesData: state.messages.messagesData,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage,\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}