{"version":3,"sources":["components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/AddPostForm/AddPostForm.tsx","redux/selectors/profileSelectors.ts","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/Status/Status.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js"],"names":["FormControl","meta","touched","error","children","hasError","className","st","formControl","TextArea","props","input","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","requiredField","value","undefined","maxLength","max","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","to","_classCallCheck","instance","Constructor","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","key","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_typeof","obj","constructor","prototype","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","Post","message","likeCount","post","item","photo","src","alt","btn","reduxForm","form","onSubmit","handleSubmit","getPostsData","profile","postsData","getStatus","status","getProfile","MyPosts","useSelector","dispatch","useDispatch","myposts","title","formData","actions","addPost","newPost","posts","map","id","Status","statusFromState","useState","editMode","setEditMode","setStatus","useEffect","autoFocus","defaultValue","onBlur","updateProfileStatus","onChange","event","onDoubleClick","style","formSummaryError","type","keys","contacts","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","a","saveProfile","photos","large","small","avatar","files","lenght","savePhoto","initialValues","Profile","ProfileContainer","subClass","superClass","create","protoProps","staticProps","userId","match","params","authorizedUserId","history","getProfileInfo","getProfileStatus","console","refreshProfile","prevProps","React","compose","withRouter"],"mappings":"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","file":"static/js/6.2ab398e3.chunk.js","sourcesContent":["import React from 'react'\r\nimport st from './FormsControls.module.css'\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form';\r\nimport { FieldValidatorType } from '../../../utils/validators/validators';\r\n\r\ntype FormControlType = {\r\n    meta: WrappedFieldMetaProps\r\n    children: React.ReactNode\r\n}\r\n\r\nconst FormControl: React.FC<FormControlType> = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${st.formControl} ${hasError && st.error}`}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...restProps } = props\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps} />\r\n    </FormControl>)\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport function createField<FormKeysType extends string>\r\n    (\r\n        placeholder: string,\r\n        name: FormKeysType,\r\n        validators: FieldValidatorType[],\r\n        component: React.FC<WrappedFieldProps>,\r\n        props = {},\r\n        text: string = \"\",\r\n        className: string = \"\") {\r\n    return (\r\n        <div>\r\n            <Field\r\n                className={className}\r\n                name={name}\r\n                component={component}\r\n                placeholder={placeholder}\r\n                validate={validators}\r\n                {...props} /> {text}\r\n        </div>)\r\n}\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__M0W-4\",\"error\":\"FormsControls_error__2fNsK\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const requiredField: FieldValidatorType = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (max: number): FieldValidatorType => (value) => {\r\n    return value && value.length > max ? `Max length is ${max} symbols` : undefined\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from '../redux/reduxStore';\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n} as MapPropsType);\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype DispatchPropsType = {\r\n}\r\n\r\nfunction withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n    const RedirectComponent = (props: MapPropsType & DispatchPropsType) => {\r\n        const { isAuth, ...restProps } = props\r\n        return !isAuth\r\n            ? <Redirect to=\"/login\" />\r\n            : <Component {...restProps as WCP} />\r\n    }\r\n    return connect<MapPropsType, DispatchPropsType, WCP, AppStateType>(mapStateToProps, {})(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__v0QMI\",\"contact\":\"ProfileInfo_contact__1cK74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1xeZn\",\"item\":\"Post_item__1qbBJ\",\"photo\":\"Post_photo__1kzoD\",\"btn\":\"Post_btn__2wcP5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__2869F\",\"title\":\"MyPosts_title__1V49T\",\"textArea\":\"MyPosts_textArea__2qX7E\",\"btn\":\"MyPosts_btn__1CtxC\",\"form\":\"MyPosts_form__2K55A\"};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import React from 'react'\r\nimport st from './Post.module.css'\r\n\r\ntype PropsType = {\r\n  message: string,\r\n  likeCount: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = ({message, likeCount}) => {\r\n    return (\r\n      <div className={st.post}>\r\n        <div className={st.item}>\r\n          <img\r\n            className={st.photo}\r\n            src=\"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\"\r\n            alt=\"Avatar example\"\r\n          ></img>\r\n          <p>{message}</p>\r\n        </div>\r\n        <button className={st.btn}>Like {likeCount}</button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { requiredField } from '../../../../utils/validators/validators'\r\nimport { createField, GetStringKeys, Input } from '../../../common/FormsControls/FormsControls'\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport type AddPostFormValuesType = {\r\n    newPost: string\r\n}\r\n\r\ntype AddPostFormValuesTypeKeys = GetStringKeys<AddPostFormValuesType>\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<AddPostFormValuesTypeKeys>(\"Your post\", 'newPost', [requiredField], Input)}\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<AddPostFormValuesType, PropsType>({ form: 'profile-add-post' })(AddPostForm)","import { AppStateType } from '../reduxStore';\r\n\r\nexport const getPostsData = (state: AppStateType) => {\r\n    return state.profile.postsData\r\n}\r\n\r\nexport const getStatus = (state: AppStateType) => {\r\n    return state.profile.status\r\n}\r\n\r\nexport const getProfile = (state: AppStateType) => {\r\n    return state.profile.profile\r\n}\r\n","import React from 'react'\r\n// Components\r\nimport Post from './Post/Post'\r\nimport AddPostForm from './AddPostForm/AddPostForm'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPostsData } from '../../../redux/selectors/profileSelectors'\r\nimport {actions} from '../../../redux/profileReducer'\r\n// Styles\r\nimport st from './MyPosts.module.css'\r\n\r\ntype MyPostsFormValuesType = {\r\n  newPost: string,\r\n}\r\n\r\nconst MyPosts: React.FC = () => {\r\n  const postsData = useSelector(getPostsData)\r\n  const dispatch = useDispatch()\r\n\r\n  const onAddPost = (formData: MyPostsFormValuesType) => {\r\n    dispatch(actions.addPost(formData.newPost))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={st.myposts}>\r\n        <h2 className={st.title}>MY POSTS</h2>\r\n        <AddPostForm onSubmit={onAddPost}/>\r\n      </div>\r\n      <div className={st.posts}>\r\n        {postsData.map((item) => (\r\n          <Post\r\n            key={item.id}\r\n            message={item.message}\r\n            likeCount={item.likeCount}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyPosts\r\n","import React, { useState, useEffect, ChangeEvent } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getStatus } from '../../../../redux/selectors/profileSelectors'\r\nimport { updateProfileStatus } from '../../../../redux/profileReducer'\r\n\r\nconst Status: React.FC = () => {\r\n    const statusFromState = useSelector(getStatus)\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(statusFromState)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        dispatch(updateProfileStatus(status))\r\n    }\r\n\r\n    const onStatusChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(event.target.value)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(statusFromState)\r\n    }, [statusFromState])\r\n\r\n    return (\r\n        <>\r\n            {!editMode\r\n                ? <><b>Status</b>: <span onDoubleClick={activateEditMode}>{statusFromState || \"----------\"}</span></>\r\n                : <input\r\n                    autoFocus={true}\r\n                    defaultValue={status}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Status\r\n","import { reduxForm, InjectedFormProps } from 'redux-form'\r\nimport { createField, Input, TextArea } from '../../../common/FormsControls/FormsControls'\r\nimport st from '../ProfileInfo.module.css'\r\nimport style from '../../../common/FormsControls/FormsControls.module.css'\r\nimport { ProfileType } from '../../../../types/types'\r\nimport { GetStringKeys } from '../../../common/FormsControls/FormsControls'\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n}\r\ntype ProfileTypeKeys = GetStringKeys<ProfileType>\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, PropsType> & PropsType> = ({ handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <div><button>Save</button></div>\r\n                {error && <div className={style.formSummaryError}>{error}</div>}\r\n                <div>\r\n                    <b>Full Name</b>: {createField<ProfileTypeKeys>(\"Full Name\", \"fullName\", [], Input)}\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job</b>: {createField<ProfileTypeKeys>('', 'lookingForAJob', [], Input, {type: \"checkbox\"})}\r\n                </div>\r\n                <div>\r\n                    <b>My professional skils</b>: {createField<ProfileTypeKeys>('My professional skils', 'lookingForAJobDescription', [], TextArea)}\r\n                </div>\r\n                <div>\r\n                    <b>About me</b>: {createField<ProfileTypeKeys>(\"About me\", \"aboutMe\", [], TextArea)}\r\n                </div>\r\n                {<div>\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => (\r\n                        <div key={key} className={st.contact}>\r\n                            <b>{key}</b>: {createField(key, `contacts.${key}`, [], Input)}\r\n                        </div>\r\n                    ))}\r\n                </div>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<ProfileType, PropsType>({ form: 'edit-profile' })(ProfileDataForm);","import React, { useState } from 'react'\r\n// Components\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport Status from './Status/Status'\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm'\r\n// Styles\r\nimport st from './ProfileInfo.module.css'\r\n// Types\r\nimport { ProfileType, ContactsType } from '../../../types/types'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProfile } from '../../../redux/selectors/profileSelectors'\r\nimport { savePhoto, saveProfile } from '../../../redux/profileReducer'\r\n\r\ntype PropsType = {\r\n  isOwner: boolean,\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({ isOwner }) => {\r\n  \r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const profile = useSelector(getProfile)\r\n  const dispatch = useDispatch()\r\n  \r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  const onMainPhotoSelected = (e: any) => {\r\n    if (e.target.files.lenght) {\r\n      dispatch(savePhoto(e.target.files[0]))\r\n    }\r\n  }\r\n  const onSubmit = async (formData: ProfileType) => {\r\n    await dispatch(saveProfile(formData))\r\n    setEditMode(false)\r\n  }\r\n  const photo = profile.photos.large || profile.photos.small\r\n  return (\r\n    <div>\r\n      <div>\r\n      <img\r\n        className={st.avatar}\r\n        src={\r\n          photo\r\n            ? photo \r\n            : \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\"\r\n        }\r\n        alt=\"Avatar\"\r\n        />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n          : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)} />}\r\n        <Status />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ntype ProfileDataPropsType = {\r\n  profile: ProfileType\r\n  isOwner: boolean,\r\n  goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner &&\r\n        <div><button onClick={goToEditMode}>Edit</button></div>}\r\n      <div>\r\n        <b>Full Name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n        <div>\r\n          <b>My professional skils</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key => (\r\n          <Contact key={key} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\ntype ContactPropsType = {\r\n  contactTitle: string,\r\n  contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<ContactPropsType> = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={st.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>)\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport MyPosts from './MyPosts/MyPosts'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\ntype PropsType = {\r\n  isOwner: boolean,\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return (\r\n      <div>\r\n        <ProfileInfo isOwner={props.isOwner} />\r\n        <MyPosts />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { withRouter, RouteComponentProps } from 'react-router'\r\n// Components\r\nimport Profile from './Profile'\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { getProfileInfo, getProfileStatus } from '../../redux/profileReducer'\r\nimport { compose } from 'redux'\r\nimport { AppStateType } from '../../redux/reduxStore'\r\n// HOC\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\r\n\r\ntype MapStatePropsType = {\r\n  authorizedUserId: number | null,\r\n  isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  getProfileInfo: (userId: number) => void,\r\n  getProfileStatus: (userId: number) => void,\r\n}\r\n\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\nexport type PropsType = MapStatePropsType & MapDispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n  refreshProfile() {\r\n    let userId: number | null = +this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    if (!userId) {\r\n      console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n    } else {\r\n      this.props.getProfileInfo(userId)\r\n      this.props.getProfileStatus(userId)\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n        <Profile\r\n          {...this.props}\r\n          isOwner={!this.props.match.params.userId}\r\n        />\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { getProfileInfo, getProfileStatus }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)\r\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"sourceRoot":""}