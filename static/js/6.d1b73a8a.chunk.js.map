{"version":3,"sources":["utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","components/Login/Login.module.css","components/Login/Login.js"],"names":["requiredField","value","undefined","maxLength","max","length","FormControl","meta","touched","error","children","hasError","className","st","formControl","TextArea","props","input","restProps","child","Input","createField","name","type","component","placeholder","validate","module","exports","LoginReduxForm","reduxForm","form","handleSubmit","wrapper","onSubmit","inline","formSummaryError","btn","connect","state","isAuth","auth","login","logout","to","text","formData","email","password","rememberMe"],"mappings":"wGAAA,oEAAO,IAAMA,EAAgB,SAACC,GAC1B,OAAOA,OAAQC,EAAY,qBAGlBC,EAAY,SAACC,GAAD,OAAS,SAACH,GAC/B,OAAOA,GAASA,EAAMI,OAASD,EAAxB,wBAA+CA,EAA/C,iBAA+DF,K,oMCDpEI,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACpCC,EAAWH,GAAWC,EAE5B,OACI,sBAAKG,UAAS,UAAKC,IAAGC,YAAR,YAAuBH,GAAYE,IAAGJ,OAApD,UACKC,EACAC,GAAY,8BAAK,+BAAOF,UAKxBM,EAAW,SAACC,GAAW,IACzBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADW,YACYH,EADZ,2BAE/B,OAAQ,cAACV,EAAD,2BAAiBU,GAAjB,aACJ,oDAAcC,GAAWC,QAIpBE,EAAQ,SAACJ,GAAW,IACrBC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BT,KAA8BS,EAAxBG,MADO,YACiBH,EADjB,2BAE5B,OACI,cAACV,EAAD,2BAAiBU,GAAjB,aACI,iDAAWC,GAAWC,QAKrBG,EAAc,SAACT,EAAWU,EAAMC,EAAMC,EAAWC,EAAaC,GACvE,OAAO,cAAC,IAAD,CACHd,UAAWA,EACXU,KAAMA,EACNC,KAAMA,EACNC,UAAWA,EACXC,YAAaA,EACbC,SAAUA,M,oBCrClBC,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,oBCA3ED,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,oBAAoB,OAAS,sBAAsB,MAAQ,qBAAqB,IAAM,mBAAmB,iBAAmB,kC,iCCDtL,2FAwCMC,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAfL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcvB,EAAW,EAAXA,MAC9B,OACI,uBAAMG,UAAWC,IAAGoB,QAASC,SAAUF,EAAvC,UACKX,YAAYR,IAAGI,MAAO,QAAS,OAAQG,IAAO,QAAS,CAACpB,MACxDqB,YAAYR,IAAGI,MAAO,WAAY,WAAYG,IAAO,WAAY,CAACpB,MACnE,sBAAKY,UAAWC,IAAGsB,OAAnB,UACKd,YAAY,KAAM,aAAc,WAAY,QAAS,KAAM,IAC5D,+CAEHZ,GAAS,qBAAKG,UAAWC,IAAGuB,iBAAnB,SAAsC3B,IAChD,wBAAQG,UAAWC,IAAGwB,IAAtB,yBAWGC,uBAJS,SAACC,GACrB,MAAO,CAACC,OAAOD,EAAME,KAAKD,UAGU,CAAEE,UAAOC,YAAlCL,EArCD,SAAC,GAAqB,IAApBI,EAAmB,EAAnBA,MAMZ,OAN+B,EAAZF,OAOR,cAAC,IAAD,CAAUI,GAAG,aAGhB,sBAAKhC,UAAWC,IAAGoB,QAAnB,UACJ,oBAAIrB,UAAWC,IAAGgC,KAAlB,mBACA,cAAChB,EAAD,CAAgBK,SAXH,SAACY,GAAc,IACpBC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,WACzBP,EAAMK,EAAOC,EAAUC","file":"static/js/6.d1b73a8a.chunk.js","sourcesContent":["export const requiredField = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    return value && value.length > max ? `Max length is ${max} symbols` : undefined\r\n}","import React from 'react'\r\nimport st from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${st.formControl} ${hasError && st.error}`}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (className, name, type, component, placeholder, validate) => {\r\n    return <Field\r\n        className={className}\r\n        name={name}\r\n        type={type}\r\n        component={component}\r\n        placeholder={placeholder}\r\n        validate={validate}/>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__M0W-4\",\"error\":\"FormsControls_error__2fNsK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3Ph-H\",\"text\":\"Login_text__Y66_4\",\"inline\":\"Login_inline__21TIx\",\"input\":\"Login_input__12yZv\",\"btn\":\"Login_btn__261XC\",\"formSummaryError\":\"Login_formSummaryError__3Kg60\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport { requiredField } from '../../utils/validators/validators'\r\nimport {createField, Input} from '../common/FormsControls/FormsControls'\r\nimport st from './Login.module.css'\r\nimport { login, logout } from '../../redux/authReducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Login = ({login, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        const { email, password, rememberMe } = formData;\r\n        login(email, password, rememberMe);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (<div className={st.wrapper}>\r\n        <h1 className={st.text}>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>)\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form className={st.wrapper} onSubmit={handleSubmit}>\r\n            {createField(st.input, 'email', 'text', Input, 'Login', [requiredField])}\r\n            {createField(st.input, 'password', 'password', Input, 'Password', [requiredField])}\r\n            <div className={st.inline}>\r\n                {createField(null, 'rememberMe', 'checkBox', \"input\", null, [])}\r\n                <p>Remember Me</p>\r\n            </div>\r\n            {error && <div className={st.formSummaryError}>{error}</div>}\r\n            <button className={st.btn}>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isAuth:state.auth.isAuth}\r\n}\r\n\r\nexport default connect(mapStateToProps, { login, logout })(Login);\r\n"],"sourceRoot":""}