{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Login/Login.module.css","components/Login/Login.js"],"names":["FormControl","meta","touched","error","children","hasError","className","st","formControl","TextArea","props","input","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","module","exports","requiredField","value","undefined","maxLength","max","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","wrapper","onSubmit","inline","type","src","alt","formSummaryError","btn","connect","state","isAuth","auth","login","logout","to","formData","email","password","rememberMe","captcha"],"mappings":"2QAIMA,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACpCC,EAAWH,GAAWC,EAE5B,OACI,sBAAKG,UAAS,UAAKC,IAAGC,YAAR,YAAuBH,GAAYE,IAAGJ,OAApD,UACKC,EACAC,GAAY,8BAAK,+BAAOF,UAKxBM,EAAW,SAACC,GAAW,IACzBC,EAAoCD,EAApCC,MAAuBC,GAAaF,EAA7BT,KAA6BS,EAAvBG,MADW,YACYH,EADZ,2BAE/B,OAAQ,cAACV,EAAD,2BAAiBU,GAAjB,aACJ,oDAAcC,GAAWC,QAIpBE,EAAQ,SAACJ,GAAW,IACrBC,EAAqCD,EAArCC,MAAuBC,GAAcF,EAA9BT,KAA8BS,EAAxBG,MADO,YACiBH,EADjB,2BAE5B,OACI,cAACV,EAAD,2BAAiBU,GAAjB,aACI,iDAAWC,GAAWC,QAKrBG,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAA6C,IAAlCT,EAAiC,uDAA3B,GAAIU,EAAuB,uDAAlB,GAAId,EAAc,uCACnG,OACI,gCACI,cAAC,IAAD,aACIA,UAAWA,EACXW,KAAMA,EACNE,UAAWA,EACXH,YAAaA,EACbK,SAAUH,GACNR,IAPZ,IAOuBU,O,oBCvC/BE,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,+B,iCCD3E,oEAAO,IAAMC,EAAgB,SAACC,GAC1B,OAAOA,OAAQC,EAAY,qBAGlBC,EAAY,SAACC,GAAD,OAAS,SAACH,GAC/B,OAAOA,GAASA,EAAMI,OAASD,EAAxB,wBAA+CA,EAA/C,iBAA+DF,K,oBCJ1EJ,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,oBAAoB,OAAS,sBAAsB,MAAQ,qBAAqB,IAAM,mBAAmB,iBAAmB,kC,iCCDtL,2FA0CMO,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,EAjBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAc9B,EAAuB,EAAvBA,MAAO+B,EAAgB,EAAhBA,WACrC,OACI,uBAAM5B,UAAWC,IAAG4B,QAASC,SAAUH,EAAvC,UACKlB,YAAY,QAAS,QAAS,CAACS,KAAgBV,IAAO,GAAI,GAAIP,IAAGI,OACjEI,YAAY,WAAY,WAAY,CAACS,KAAgBV,IAAO,GAAI,GAAIP,IAAGI,OACxE,sBAAKL,UAAWC,IAAG8B,OAAnB,UACKtB,YAAY,GAAI,aAAc,GAAID,IAAO,CAAEwB,KAAM,aAClD,+CAEHJ,GAAc,qBAAKK,IAAKL,EAAYM,IAAI,YACxCN,GAAcnB,YAAY,qBAAsB,UAAW,CAACS,KAAgBV,IAAO,GAAI,GAAIP,IAAGI,OAC9FR,GAAS,qBAAKG,UAAWC,IAAGkC,iBAAnB,SAAsCtC,IAChD,wBAAQG,UAAWC,IAAGmC,IAAtB,yBAcGC,uBAPS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBX,WAAYU,EAAME,KAAKZ,cAIS,CAAEa,UAAOC,YAAlCL,EA1CD,SAAC,GAAiC,IAAhCI,EAA+B,EAA/BA,MAAOF,EAAwB,EAAxBA,OAAQX,EAAgB,EAAhBA,WAM3B,OAAIW,EACO,cAAC,IAAD,CAAUI,GAAG,aAGhB,sBAAK3C,UAAWC,IAAG4B,QAAnB,UACJ,oBAAI7B,UAAWC,IAAGa,KAAlB,mBACA,cAACU,EAAD,CAAgBM,SAXH,SAACc,GAAc,IACpBC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,SAAUC,EAAwBH,EAAxBG,WAAYC,EAAYJ,EAAZI,QACrCP,EAAMI,EAAOC,EAAUC,EAAYC,IASCpB,WAAYA","file":"static/js/7.3b77384b.chunk.js","sourcesContent":["import React from 'react'\r\nimport st from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${st.formControl} ${hasError && st.error}`}>\r\n            {children}\r\n            {hasError && <div><span>{error}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props={}, text=\"\", className) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                className={className}\r\n                name={name}\r\n                component={component}\r\n                placeholder={placeholder}\r\n                validate={validators}\r\n                {...props} /> {text}\r\n        </div>)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__M0W-4\",\"error\":\"FormsControls_error__2fNsK\"};","export const requiredField = (value) => {\r\n    return value ? undefined : \"Field is required\"\r\n}\r\n\r\nexport const maxLength = (max) => (value) => {\r\n    return value && value.length > max ? `Max length is ${max} symbols` : undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3Ph-H\",\"text\":\"Login_text__Y66_4\",\"inline\":\"Login_inline__21TIx\",\"input\":\"Login_input__12yZv\",\"btn\":\"Login_btn__261XC\",\"formSummaryError\":\"Login_formSummaryError__3Kg60\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport { requiredField } from '../../utils/validators/validators'\r\nimport {createField, Input} from '../common/FormsControls/FormsControls'\r\nimport st from './Login.module.css'\r\nimport { login, logout } from '../../redux/authReducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        const { email, password, rememberMe, captcha } = formData;\r\n        login(email, password, rememberMe, captcha);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (<div className={st.wrapper}>\r\n        <h1 className={st.text}>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n    </div>)\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form className={st.wrapper} onSubmit={handleSubmit}>\r\n            {createField('Login', 'email', [requiredField], Input, {}, '', st.input)}\r\n            {createField('Password', 'password', [requiredField], Input, {}, '', st.input)}\r\n            <div className={st.inline}>\r\n                {createField('', 'rememberMe', [], Input, { type: 'checkbox' })}\r\n                <p>Remember me</p>\r\n            </div>\r\n            {captchaUrl && <img src={captchaUrl} alt=\"captcha\" />}\r\n            {captchaUrl && createField('Symbols from image', 'captcha', [requiredField], Input, {}, '', st.input)}\r\n            {error && <div className={st.formSummaryError}>{error}</div>}\r\n            <button className={st.btn}>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { login, logout })(Login);\r\n"],"sourceRoot":""}