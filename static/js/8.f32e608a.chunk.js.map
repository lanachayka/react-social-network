{"version":3,"sources":["components/common/Pagination/Pagination.module.css","components/FindUsers/User/User.module.css","components/common/Pagination/Pagination.tsx","assets/img/user.jpg","components/FindUsers/User/User.tsx","components/FindUsers/UsersSeacrhForm/UsersSearchForm.tsx","components/FindUsers/FindUsers.tsx","redux/findUsersSelectors.ts","components/FindUsers/FindUsersContainer.tsx"],"names":["module","exports","Pagination","totalItemsCount","pageSize","onPageChanged","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","st","buttons","btn","onClick","filter","p","map","cn","selectedPage","pageNumber","User","followingInProgress","follow","unfollow","user","container","to","id","photo","src","photos","small","userPhoto","alt","name","followed","disabled","some","info","status","userSearchFormValidate","UserSearchForm","React","memo","onFilterChanged","initialValues","term","friend","validate","onSubmit","values","setSubmitting","isSubmitting","type","as","value","FindUsers","props","totalUsersCount","users","getUsers","state","findUsers","getPageSize","createSelector","u","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getFindUsersFilter","FindUsersContainer","requestUsers","this","pageTitle","Preloader","Component","compose","connect","setCurrentPage","actions"],"mappings":"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","file":"static/js/8.f32e608a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Pagination_buttons__3r7Ng\",\"pageNumber\":\"Pagination_pageNumber__1bkeD\",\"selectedPage\":\"Pagination_selectedPage__Yzlt_\",\"btn\":\"Pagination_btn__vb_lI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2PiGS\",\"container\":\"User_container__1e9Zk\",\"info\":\"User_info__1ACZ9\",\"photo\":\"User_photo__WT1UX\",\"btn\":\"User_btn__3_BiT\"};","import React, {useState} from 'react';\r\nimport st from './Pagination.module.css';\r\nimport cn from 'classnames';\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number,\r\n    pageSize: number,\r\n    onPageChanged: (p: number) => void,\r\n    currentPage: number, \r\n    portionSize?: number\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = ({ totalItemsCount, pageSize, onPageChanged, currentPage, portionSize = 10 }) => {\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    const pages: number[] = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount: number = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState<number>(1);\r\n    const leftPortionPageNumber: number = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber: number = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={st.buttons}>\r\n            {portionNumber > 1 &&\r\n            <button className={st.btn} onClick={()=>setPortionNumber(portionNumber-1)}>PREV</button>}\r\n            {pages\r\n                .filter(p => (p >= leftPortionPageNumber) && (p <= rightPortionPageNumber))\r\n                .map((p) => (\r\n                    <span\r\n                        key={p}\r\n                        onClick={() => onPageChanged(p)}\r\n                        className={cn({[st.selectedPage]:currentPage === p}, st.pageNumber)}>\r\n                        {p}</span>))}\r\n            {portionCount > portionNumber &&\r\n            <button className={st.btn} onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\r\n        </div>)\r\n}\r\n\r\nexport default Pagination;","export default __webpack_public_path__ + \"static/media/user.181d3cde.jpg\";","import React from 'react'\r\nimport st from './User.module.css'\r\nimport userPhoto from '../../../assets/img/user.jpg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../../types/types'\r\n\r\ntype PropsType = {\r\n  followingInProgress: number[],\r\n  follow: (userId: number) => void,\r\n  unfollow: (userId: number) => void,\r\n  user: UserType\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({followingInProgress, follow, unfollow, user}) => {\r\n  return (\r\n        <div className={st.user}>\r\n          <div className={st.container}>\r\n            <NavLink to={`./profile/${user.id}`}>\r\n              <img\r\n                className={st.photo}\r\n                src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                alt={user.name}\r\n              />\r\n            </NavLink>\r\n            {user.followed ? (\r\n              <button\r\n                disabled={followingInProgress.some(id => id === user.id)}\r\n                onClick={() => unfollow(user.id)}\r\n                className={st.btn}>\r\n                UNFOLLOW\r\n              </button>\r\n            ) : (\r\n                <button\r\n                  disabled={followingInProgress.some(id => id === user.id)}\r\n                  onClick={() => follow(user.id)}\r\n                  className={st.btn}>\r\n                FOLLOW\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className={st.info}>\r\n            <h3>{user.name}</h3>\r\n            <p>{user.status}</p>\r\n          </div>\r\n        </div>)\r\n};\r\n\r\nexport default User;\r\n","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { FilterType } from '../../../redux/findUsersReducer'\r\n\r\nconst userSearchFormValidate = () => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\ntype UserFormValueType = {\r\n    term: string,\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\n\r\nconst UserSearchForm: React.FC<PropsType> = React.memo(({ onFilterChanged }) => {\r\n    const submit = (values: UserFormValueType, { setSubmitting }: { setSubmitting: (isSubmiting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend:\r\n                values.friend === 'null'\r\n                    ? null\r\n                    : values.friend === 'true'\r\n                    ? true : false\r\n        }\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{ term: '', friend: 'null' }}\r\n                validate={userSearchFormValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\" />\r\n                        <Field name=\"friend\" as=\"select\">\r\n                            <option value=\"null\">All</option>\r\n                            <option value=\"true\">Only followed</option>\r\n                            <option value=\"false\">Only unfollowed</option>\r\n                        </Field>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Find\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UserSearchForm","import React from 'react'\r\nimport { FilterType } from '../../redux/findUsersReducer'\r\nimport { UserType } from '../../types/types'\r\nimport Pagination from '../common/Pagination/Pagination'\r\nimport User from './User/User'\r\nimport UserSearchForm from './UsersSeacrhForm/UsersSearchForm'\r\n\r\ntype PropsType = {\r\n  totalUsersCount: number,\r\n  pageSize: number,\r\n  onPageChanged: (p: number) => void,\r\n  currentPage: number,\r\n  users: UserType[],\r\n  followingInProgress: number[],\r\n  follow: (userId: number) => void,\r\n  unfollow: (userId: number) => void,\r\n  onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nconst FindUsers: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div>\r\n      <UserSearchForm onFilterChanged={props.onFilterChanged}/>\r\n      <Pagination\r\n          totalItemsCount={props.totalUsersCount}\r\n          pageSize={props.pageSize}\r\n          onPageChanged={props.onPageChanged}\r\n          currentPage={props.currentPage}\r\n      />\r\n      {props.users.map((user: UserType) => (\r\n        <User\r\n            key={user.id}\r\n            user={user}\r\n            followingInProgress={props.followingInProgress}\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUsers;\r\n","import { AppStateType } from './reduxStore';\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const getUsers = (state:AppStateType) => {\r\n    return state.findUsers.users\r\n}\r\n\r\n// Приклад складного селектора стовореного за допомогою бібліотеки reselect\r\n\r\nexport const getUsersSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\n// -----------------------------------------------------------------------\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.findUsers.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.findUsers.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.findUsers.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.findUsers.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.findUsers.followingInProgress\r\n}\r\n\r\nexport const getFindUsersFilter = (state: AppStateType) => {\r\n    return state.findUsers.filter\r\n}","import { Component } from 'react'\r\n// Components\r\nimport FindUsers from './FindUsers'\r\nimport Preloader from '../common/Preloader/Preloader'\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {actions, follow, unfollow, requestUsers, FilterType} from '../../redux/findUsersReducer'\r\nimport { compose } from 'redux'\r\nimport {\r\n  getUsers,\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getFindUsersFilter\r\n} from '../../redux/findUsersSelectors'\r\nimport { AppStateType } from '../../redux/reduxStore'\r\n// Types \r\nimport { UserType } from '../../types/types'\r\n\r\ntype MapStatePropsType = {\r\n  users: UserType[],\r\n  pageSize: number,\r\n  totalUsersCount: number,\r\n  currentPage: number,\r\n  isFetching: boolean,\r\n  followingInProgress: number[],\r\n  filter: FilterType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  follow: (userId: number) => void,\r\n  unfollow: (userId: number) => void,\r\n  setCurrentPage: (pageNumber: number) => void,\r\n  requestUsers: (currentPage: number, pageSize: number, filter: FilterType) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n  pageTitle: string\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass FindUsersContainer extends Component<PropsType> {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize, requestUsers, filter} = this.props\r\n    requestUsers(currentPage, pageSize, filter)\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    const {requestUsers, pageSize, filter} = this.props\r\n    requestUsers(pageNumber, pageSize, filter)\r\n  }\r\n\r\n  onFilterChanged = (filter: FilterType) => {\r\n    const { pageSize, requestUsers } = this.props\r\n    requestUsers(1, pageSize, filter)\r\n  }\r\n\r\n  render() {\r\n    const {isFetching, pageTitle} = this.props\r\n    return (\r\n      <>\r\n        <h2>{pageTitle}</h2>\r\n        {isFetching ? (\r\n          <Preloader />\r\n        ) : (\r\n          <FindUsers\r\n              onPageChanged={this.onPageChanged}\r\n              onFilterChanged={this.onFilterChanged}\r\n            {...this.props}\r\n          />\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n    filter: getFindUsersFilter(state)\r\n  }\r\n}\r\n\r\nexport default compose(connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(\r\n  mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage: actions.setCurrentPage,\r\n  requestUsers\r\n})\r\n)(FindUsersContainer)\r\n"],"sourceRoot":""}