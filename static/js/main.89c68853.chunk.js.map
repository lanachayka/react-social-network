{"version":3,"sources":["api/profile-api.ts","redux/profileReducer.ts","api/users-api.ts","utils/object-helpers.js","redux/findUsersReducer.ts","api/api.ts","redux/messagesReducer.ts","redux/appReducer.ts","redux/navbarReducer.ts","redux/reduxStore.tsx","redux/selectors/appSelectors.ts","App.tsx","index.js","api/security-api.ts","api/auth-api.ts","redux/authReducer.ts","assets/img/loader.gif","components/common/Preloader/Preloader.tsx"],"names":["profileAPI","userId","instance","get","then","response","data","status","put","photoFile","formData","FormData","append","headers","profile","initialState","postsData","id","message","likeCount","actions","addPost","newPostText","type","deletePost","postId","setUserProfile","setProfileStatus","savePhotoSuccess","photos","getProfileInfo","dispatch","a","getProfileStatus","updateProfileStatus","resultCode","ResultCodes","Succsess","savePhoto","file","saveProfile","getState","auth","stopSubmit","_error","messages","Promise","reject","profileReducer","state","action","length","filter","post","userAPI","getUsers","currentPage","pageSize","term","friend","follow","unfollow","delete","updateObjectInArray","items","check","objPropName","newObjProps","map","item","users","totalUsersCount","isFetching","followingInProgress","pageNumber","count","isFollowing","payload","requestUsers","page","totalCount","_followUnfollowFlow","apiMethod","actionCreator","bind","findUsersReducer","followed","ResultCodeForCaptcha","axios","create","baseURL","withCredentials","messagesData","dialogsData","userName","photo","sendMessage","newMessage","messagesReducer","initialized","appReducer","friends","name","navbarReducer","reducers","combineReducers","navbar","findUsers","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","getAppInitialized","Dialogs","React","lazy","ProfileContainer","Login","News","Music","Settings","FindUsers","AppContainer","compose","withRouter","useDispatch","useEffect","getAuth","useSelector","Preloader","SubMenu","Menu","Header","Layout","Content","Footer","Sider","className","theme","mode","defaultSelectedKeys","Item","to","style","padding","margin","width","height","icon","UserOutlined","title","LaptopOutlined","NotificationOutlined","minHeight","Suspense","fallback","exact","path","render","pageTitle","textAlign","SocialNetworkApp","ReactDOM","StrictMode","document","getElementById","securityAPI","authAPI","email","password","rememberMe","captcha","login","isAuth","captchaUrl","meData","loginData","CaptchaIsRequired","getCaptchaUrl","url","src","loadingIcon","alt","marginLeft"],"mappings":"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","file":"static/js/main.89c68853.chunk.js","sourcesContent":["import { PhotosType, ProfileType } from './../types/types';\r\nimport { instance, ResponseType } from './api';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype UpdateStatusRequestType = {\r\n    status: string\r\n}\r\n\r\ntype SavePhotoResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileInfo(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<UpdateStatusRequestType, AxiosResponse<ResponseType>>(`profile/status`, { status: status })\r\n            .then(response => response.data);\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put<typeof formData, AxiosResponse<ResponseType<SavePhotoResponseType>>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<ProfileType, AxiosResponse<ResponseType>>(`profile`, profile)\r\n            .then(response => response.data);\r\n    }\r\n}","import { GetStateType } from './../types/types';\r\nimport { ThunkType, InferActionsTypes } from './reduxStore';\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { PostType, PhotosType, ProfileType } from \"../types/types\";\r\nimport { ResultCodes } from '../api/api';\r\n\r\nconst initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"Hi? how are you?\", likeCount: 0 },\r\n    { id: 2, message: \"It's my first post!\", likeCount: 23 },\r\n  ] as PostType[],\r\n  profile: null as ProfileType | null,\r\n  status: \"\"\r\n};\r\n\r\nexport const actions = {\r\n  addPost: (newPostText: string) => ({ type: 'profile/ADD_POST', newPostText: newPostText } as const),\r\n\r\n  deletePost: (postId: number) => ({ type: 'profile/DELETE_POST', postId: postId } as const),\r\n\r\n  setUserProfile: (profile: ProfileType) => ({ type: 'profile/SET_USER_PROFILE', profile } as const),\r\n\r\n  setProfileStatus: (status: string) => ({ type: 'profile/SET_PROFILE_STATUS', status } as const),\r\n\r\n  savePhotoSuccess: (photos: PhotosType) => ({ type: 'profile/SAVE_PHOTO_SUCCESS', photos } as const),\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'profile/ADD_POST': {\r\n      return {\r\n        ...state,\r\n        postsData: [\r\n          ...state.postsData,\r\n          {\r\n            id: state.postsData[state.postsData.length - 1].id + 1,\r\n            message: action.newPostText,\r\n            likeCount: 0,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    case 'profile/DELETE_POST': {\r\n      return { ...state, postsData: state.postsData.filter(post => post.id !== action.postId)}\r\n      }\r\n    case 'profile/SET_USER_PROFILE': {\r\n      return { ...state, profile: action.profile }\r\n    }\r\n    case 'profile/SET_PROFILE_STATUS': {\r\n      return { ...state, status: action.status }\r\n    }\r\n    case 'profile/SAVE_PHOTO_SUCCESS': {\r\n      return { ...state, profile: { ...state.profile, photos: action.photos} as ProfileType }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProfileInfo = (userId: number | null): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.getProfileInfo(userId)\r\n  dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getProfileStatus = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.getStatus(userId)\r\n  dispatch(actions.setProfileStatus(data));\r\n}\r\n\r\nexport const updateProfileStatus = (status: string): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.updateStatus(status)\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actions.setProfileStatus(status));\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.savePhoto(file);\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actions.savePhotoSuccess(data.data.photos));\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType<ActionsTypes | ReturnType<typeof stopSubmit>> => async (dispatch, getState: GetStateType) => {\r\n  const userId = getState().auth.id;\r\n  const data = await profileAPI.saveProfile(profile);\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(getProfileInfo(userId));\r\n  } else {\r\n    dispatch(stopSubmit(\"edit-profile\", { _error: data.messages[0] }));\r\n    return Promise.reject(data.messages[0]);\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import { instance, GetItemsType } from './api'\r\nimport { AxiosResponse } from 'axios'\r\n\r\ntype FollowRequestType = {\r\n    userId: number\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, term = '', friend: null | boolean = null) {\r\n        if (friend === null) {\r\n            return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}`\r\n            ).then(response => response.data)\r\n        }\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}&friend=${friend}`\r\n        ).then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<FollowRequestType, AxiosResponse<ResponseType>>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<FollowRequestType, AxiosResponse<ResponseType>>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n}","export const updateObjectInArray = (items, check, objPropName, newObjProps) => {\r\n    return items.map((item) => {\r\n        if (item[objPropName] === check) {\r\n            return { ...item, ...newObjProps };\r\n        }\r\n        return item;\r\n    })\r\n}\r\n","import { ResultCodes } from './../api/api'\r\nimport { InferActionsTypes, ThunkType } from './reduxStore'\r\nimport { UserType } from '../types/types'\r\nimport { userAPI } from '../api/users-api'\r\nimport { updateObjectInArray } from '../utils/object-helpers'\r\nimport { Dispatch } from 'redux'\r\n\r\nconst initialState = {\r\n  users: [] as UserType[],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as number[],\r\n  filter: {\r\n    term: '',\r\n    friend: null as null | boolean\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  followSuccess: (userId: number) => ({ type: 'findUsers/FOLLOW_SUCCESS', userId } as const),\r\n\r\n  unfollowSuccess: (userId: number) => ({ type: 'findUsers/UNFOLLOW_SUCCESS', userId } as const),\r\n\r\n  setUsers: (users: UserType[]) => ({ type: 'findUsers/SET_USERS', users } as const),\r\n\r\n  setCurrentPage: (pageNumber: number) => ({\r\n    type: 'findUsers/SET_CURRENT_PAGE',\r\n    pageNumber,\r\n  } as const),\r\n\r\n  setTotalUsersCount: (totalUsersCount: number) => ({\r\n    type: 'findUsers/SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount,\r\n  } as const),\r\n\r\n  setIsFetching: (isFetching: boolean) => ({\r\n    type: 'findUsers/SET_IS_FETCHING',\r\n    isFetching: isFetching,\r\n  } as const),\r\n  setFollowingProgress: (isFollowing: boolean, userId: number) => ({\r\n    type: 'findUsers/SET_FOLLOWING_PROGRESS',\r\n    isFollowing: isFollowing,\r\n    userId: userId\r\n  } as const),\r\n  setFilter: (filter: FilterType) => ({\r\n    type: 'findUsers/SET_FILTER',\r\n    payload: filter\r\n  } as const)\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport type FilterType = typeof initialState.filter\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nexport const findUsersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'findUsers/FOLLOW_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n      };\r\n    }\r\n    case 'findUsers/UNFOLLOW_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n      };\r\n    }\r\n    case 'findUsers/SET_USERS': {\r\n      return { ...state, users: action.users }\r\n    }\r\n    case 'findUsers/SET_CURRENT_PAGE': {\r\n      return { ...state, currentPage: action.pageNumber }\r\n    }\r\n    case 'findUsers/SET_TOTAL_USERS_COUNT': {\r\n      return { ...state, totalUsersCount: action.count }\r\n    }\r\n    case 'findUsers/SET_IS_FETCHING': {\r\n      return { ...state, isFetching: action.isFetching }\r\n    }\r\n    case 'findUsers/SET_FOLLOWING_PROGRESS': {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFollowing\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      };\r\n    }\r\n    case 'findUsers/SET_FILTER': {\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  dispatch(actions.setIsFetching(true))\r\n  dispatch(actions.setCurrentPage(page))\r\n  dispatch(actions.setFilter(filter))\r\n  const data = await userAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n  dispatch(actions.setIsFetching(false))\r\n  dispatch(actions.setUsers(data.items))\r\n  dispatch(actions.setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, apiMethod: any, userId: number, actionCreator: (userId: number) => ActionsTypes) => {\r\n  dispatch(actions.setFollowingProgress(true, userId))\r\n  const data = await apiMethod(userId)\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(actions.setFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  await _followUnfollowFlow(dispatch, userAPI.follow.bind(userAPI), userId, actions.followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  await _followUnfollowFlow(dispatch, userAPI.unfollow.bind(userAPI), userId, actions.unfollowSuccess)\r\n}\r\n\r\nexport default findUsersReducer\r\n","import { UserType } from './../types/types';\r\nimport axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'f406f314-0e27-4ae0-9815-6188b0f3b0b0'\r\n    }\r\n})\r\n\r\nexport enum ResultCodes {\r\n    Succsess = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: UserType[],\r\n    totalCount: number,\r\n    error: string | null\r\n}\r\n\r\nexport type ResponseType<D ={}, RC=ResultCodes> = {\r\n    data: D,\r\n    resultCode: RC,\r\n    messages: string[],\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { InferActionsTypes } from './reduxStore';\r\nimport { MessageType, DialogType } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  messagesData: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"Yo\" },\r\n  ] as MessageType[],\r\n  dialogsData: [\r\n    {\r\n      id: 1,\r\n      userName: \"Dimych\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      userName: \"Max\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      userName: \"Anna\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 4,\r\n      userName: \"Sveta\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 5,\r\n      userName: \"Sasha\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 6,\r\n      userName: \"Victor\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n  ] as DialogType[],\r\n};\r\n\r\nexport const actions = {\r\n  sendMessage: (newMessage: string) => ({ type: 'messages/SEND-MESSAGE', newMessage: newMessage } as const)\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst messagesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'messages/SEND-MESSAGE': {\r\n      return {\r\n        ...state,\r\n        messagesData: [\r\n          ...state.messagesData,\r\n          {\r\n            id: state.messagesData[state.messagesData.length - 1].id + 1,\r\n            message: action.newMessage,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messagesReducer;\r\n\r\n","import { InferActionsTypes } from './reduxStore';\r\nimport { getAuth } from './authReducer';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst actions = {\r\n    initializingSuccess: () => ({ type: 'app/INITIALIZED_SUCCESS' } as const)\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes =  InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action: ActionsTypes):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'app/INITIALIZED_SUCCESS': {\r\n            return { ...state, initialized: true }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    dispatch(getAuth()).then(() => dispatch(actions.initializingSuccess()));\r\n}\r\n\r\nexport default appReducer;","import { FriendType } from './../types/types';\r\nconst initialState = {\r\n  friends: [\r\n    {\r\n      id: 1,\r\n      name: \"Dimych\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Max\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Sveta\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n  ] as FriendType[],\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst navbarReducer = (state = initialState): InitialStateType => {\r\n  return state;\r\n};\r\n\r\nexport default navbarReducer;\r\n","import { Action, applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport findUsersReducer from \"./findUsersReducer\";\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst reducers = combineReducers({\r\n  profile: profileReducer,\r\n  messages: messagesReducer,\r\n  navbar: navbarReducer,\r\n  findUsers: findUsersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport type InferActionsTypes<T> = T extends {[keys: string] : (...args: any[]) => infer U} ? U : never\r\n\r\nexport type ThunkType<A extends Action, R=Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import { AppStateType } from '../reduxStore'\r\n\r\nexport const getAppInitialized = (state: AppStateType) => {\r\n    return state.app.initialized\r\n}","import React, { useEffect } from 'react'\r\nimport { BrowserRouter, Route, withRouter, Redirect, Switch, Link } from 'react-router-dom'\r\n// Redux\r\nimport { Provider, useDispatch, useSelector } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer'\r\nimport { compose } from 'redux';\r\nimport store from './redux/reduxStore'\r\nimport { getAppInitialized } from './redux/selectors/appSelectors'\r\n//Styles\r\nimport './App.css'\r\nimport 'antd/dist/antd.css'\r\nimport { Layout, Menu, Breadcrumb } from 'antd'\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons'\r\n// Components\r\nimport Navbar from './components/Navbar/Navbar'\r\n// import Header from './components/Header/Header'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst Login = React.lazy(() => import('./components/Login/Login'))\r\nconst News = React.lazy(() => import('./components/News/News'))\r\nconst Music = React.lazy(() => import('./components/Music/Music'))\r\nconst Settings = React.lazy(() => import('./components/Settings/Settings'))\r\nconst FindUsers = React.lazy(() => import('./components/FindUsers/FindUsers'))\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(initializeApp())\r\n  }, [])\r\n\r\n  const initialized = useSelector(getAppInitialized)\r\n\r\n  if (!initialized) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const { SubMenu } = Menu\r\n  const { Header, Content, Footer, Sider } = Layout\r\n\r\n  return (\r\n    <Layout>\r\n      <Header className=\"header\">\r\n        <div className=\"logo\" />\r\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n          <Menu.Item key=\"1\">\r\n            <Link to=\"/developers\">Developers</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Content style={{ padding: '0 50px' }}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item>List</Breadcrumb.Item>\r\n          <Breadcrumb.Item>App</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\r\n          <Sider className=\"site-layout-background\" width={200}>\r\n            <Menu\r\n              mode=\"inline\"\r\n              defaultSelectedKeys={['1']}\r\n              style={{ height: '100%' }}\r\n            >\r\n              <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"My Profile\">\r\n                <Menu.Item key=\"1\">\r\n                  <Link to=\"/profile\">\r\n                    PROFILE\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                  <Link to=\"/dialogs\">\r\n                    MESSAGES\r\n                  </Link>\r\n                </Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"Developers\">\r\n                <Menu.Item key=\"5\">\r\n                  <Link to=\"/developers\">\r\n                    Developers\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"6\">option6</Menu.Item>\r\n                <Menu.Item key=\"7\">option7</Menu.Item>\r\n                <Menu.Item key=\"8\">option8</Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\r\n                <Menu.Item key=\"9\">option9</Menu.Item>\r\n                <Menu.Item key=\"10\">option10</Menu.Item>\r\n                <Menu.Item key=\"11\">option11</Menu.Item>\r\n                <Menu.Item key=\"12\">option12</Menu.Item>\r\n              </SubMenu>\r\n            </Menu>\r\n          </Sider>\r\n          <Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n            <React.Suspense fallback={Preloader}>\r\n              <Switch>\r\n                <Route\r\n                  exact path=\"/react-social-network\"\r\n                  render={() => <Redirect to=\"/profile\" />}\r\n                />\r\n                <Route\r\n                  path=\"/profile/:userId?\"\r\n                  render={() => <ProfileContainer />}\r\n                />\r\n                <Route\r\n                  path=\"/dialogs\"\r\n                  render={() => <Dialogs />}\r\n                />\r\n                <Route path=\"/news\" render={() => <News />} />\r\n                <Route path=\"/music\" render={() => <Music />} />\r\n                <Route path=\"/developers\" render={() => <FindUsers pageTitle=\"React Social Network Users\" />} />\r\n                <Route path=\"/settings\" render={() => <Settings />} />\r\n                <Route path=\"/login\" render={() => <Login />} />\r\n              </Switch>\r\n            </React.Suspense>\r\n          </Content>\r\n        </Layout>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n    </Layout>\r\n    // <div className=\"app-wrapper\">\r\n    //   <Header />\r\n    //   <Navbar />\r\n    //   <div className=\"app-wrapper-content\">\r\n    //     <React.Suspense fallback={Preloader}>\r\n    //       <Switch>\r\n    //         <Route\r\n    //           exact path=\"/\"\r\n    //           render={() => <Redirect to=\"/profile\" />}\r\n    //         />\r\n    //         <Route\r\n    //           path=\"/profile/:userId?\"\r\n    //           render={() => <ProfileContainer />}\r\n    //         />\r\n    //         <Route\r\n    //           path=\"/dialogs\"\r\n    //           render={() => <Dialogs />}\r\n    //         />\r\n    //         <Route path=\"/news\" render={() => <News />} />\r\n    //         <Route path=\"/music\" render={() => <Music />} />\r\n    //         <Route path=\"/users\" render={() => <FindUsers pageTitle=\"React Social Network Users\" />} />\r\n    //         <Route path=\"/settings\" render={() => <Settings />} />\r\n    //         <Route path=\"/login\" render={() => <Login />} />\r\n    //       </Switch>\r\n    //     </React.Suspense>\r\n    //   </div>\r\n    // </div>\r\n  )\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(withRouter)(App);\r\n\r\nconst SocialNetworkApp: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default SocialNetworkApp\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport SocialNetworkApp from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <SocialNetworkApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n","import { instance } from './api';\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n            .then(response => response.data);\r\n    }\r\n}","import { ResultCodes, ResultCodeForCaptcha, instance, ResponseType } from './api';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype MeResponseDataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\n\r\ntype loginLogoutDataType = {\r\n    userId: number\r\n}\r\n\r\ntype LoginRequestType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: null | string\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<ResponseType<MeResponseDataType>>(`auth/me`)\r\n            .then(response => response.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<LoginRequestType,\r\n            AxiosResponse<ResponseType<loginLogoutDataType, ResultCodes | ResultCodeForCaptcha>>>\r\n            (`auth/login`, { email: email, password: password, rememberMe: rememberMe, captcha: captcha })\r\n            .then(response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType<loginLogoutDataType>>(`auth/login`)\r\n            .then(response => response.data);\r\n    }\r\n}","import { ResultCodes, ResultCodeForCaptcha } from './../api/api';\r\nimport { InferActionsTypes, ThunkType } from './reduxStore';\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { securityAPI } from \"../api/security-api\";\r\nimport { authAPI } from '../api/auth-api';\r\n\r\nconst initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'auth/SET_AUTH_USER_DATA',\r\n        payload: {\r\n            id: userId, email: email, login: login, isAuth: isAuth\r\n        }\r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'auth/GET_CAPTCHA_URL_SUCCESS',\r\n        payload: {\r\n            captchaUrl: captchaUrl\r\n        }\r\n    } as const),\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'auth/SET_AUTH_USER_DATA': {\r\n            return { ...state, ...action.payload }\r\n        }\r\n        case 'auth/GET_CAPTCHA_URL_SUCCESS': {\r\n            return { ...state, ...action.payload }\r\n        } \r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const getAuth = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const meData = await authAPI.me()\r\n    if (meData.resultCode === ResultCodes.Succsess) {\r\n        const { id, email, login } = meData.data\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: null | string): ThunkType<ActionsTypes | ReturnType<typeof stopSubmit>> => async (dispatch) => {\r\n    const loginData = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (loginData.resultCode === ResultCodes.Succsess) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        const message = loginData.messages.length > 0 ? loginData.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    dispatch(actions.getCaptchaUrlSuccess(data.url));\r\n}\r\n\r\nexport const logout = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const logoutData = await authAPI.logout()\r\n    if (logoutData.resultCode === ResultCodes.Succsess) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","export default __webpack_public_path__ + \"static/media/loader.9c48f460.gif\";","import React from 'react'\r\nimport loadingIcon from '../../../assets/img/loader.gif'\r\n\r\nconst Preloader: React.FC = () => {\r\n    return (\r\n      <div>\r\n        <img src={loadingIcon} alt=\"Loading\" style={{ marginLeft: \"200px\" }} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n"],"sourceRoot":""}