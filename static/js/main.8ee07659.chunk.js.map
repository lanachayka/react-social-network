{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Header/Header.module.css","redux/appReducer.ts","redux/navbarReducer.ts","redux/reduxStore.tsx","hoc/withSuspense.tsx","components/Navbar/Friends/Friends.tsx","components/Navbar/Friends/FriendsContainer.tsx","components/Navbar/search_white.svg","components/Navbar/Navbar.tsx","components/Header/logo.svg","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","App.tsx","index.js","api/security-api.ts","api/auth-api.ts","redux/authReducer.ts","components/Navbar/Friends/Friends.module.css","assets/img/loader.gif","components/common/Preloader/Preloader.tsx","api/profile-api.ts","redux/profileReducer.ts","api/api.ts","redux/messagesReducer.ts","api/users-api.ts","utils/object-helpers.js","redux/findUsersReducer.ts"],"names":["module","exports","initialState","initialized","actions","type","appReducer","state","action","friends","id","name","photo","navbarReducer","reducers","combineReducers","profile","profileReducer","messages","messagesReducer","navbar","findUsers","findUsersReducer","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Component","props","Suspense","fallback","Friends","className","st","title","map","item","friend","img","src","alt","text","FriendsContainer","connect","Navbar","nav","to","activeClassName","active","icon","search","Header","isAuth","login","logout","header","logo","loginBlock","wrapper","btn","onClick","HeaderContainer","this","compose","DialogsContainer","React","lazy","ProfileContainer","Login","News","Music","Settings","FindUsersContainer","SuspendedDialogs","SuspendedProfile","App","catchAllUnhandledErrors","e","initializeApp","window","addEventListener","removeEventListener","Preloader","exact","path","render","pageTitle","AppContainer","withRouter","dispatch","getAuth","then","SocialNetworkApp","ReactDOM","StrictMode","document","getElementById","securityAPI","instance","get","response","data","authAPI","email","password","rememberMe","captcha","post","delete","captchaUrl","userId","payload","a","meData","resultCode","ResultCodes","Succsess","loginData","ResultCodeForCaptcha","CaptchaIsRequired","getCaptchaUrl","message","length","stopSubmit","_error","url","loadingIcon","style","marginLeft","profileAPI","status","put","photoFile","formData","FormData","append","headers","postsData","likeCount","addPost","newPostText","deletePost","postId","setUserProfile","setProfileStatus","savePhotoSuccess","photos","getProfileInfo","getProfileStatus","updateProfileStatus","savePhoto","file","saveProfile","getState","Promise","reject","filter","axios","create","baseURL","withCredentials","messagesData","dialogsData","userName","sendMessage","newMessage","userAPI","getUsers","currentPage","pageSize","follow","unfollow","updateObjectInArray","items","check","objPropName","newObjProps","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","pageNumber","setTotalUsersCount","count","setIsFetching","setFollowingProgress","isFollowing","requestUsers","page","totalCount","_followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.8ee07659.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__iAsk2\",\"item\":\"Navbar_item__26SM4\",\"active\":\"Navbar_active__2enci\",\"icon\":\"Navbar_icon__Qc7ak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Jm1RZ\",\"logo\":\"Header_logo__3vvBu\",\"loginBlock\":\"Header_loginBlock__29PXN\",\"login\":\"Header_login__1HUgF\",\"wrapper\":\"Header_wrapper__u1Ixr\",\"btn\":\"Header_btn__2eD-s\"};","import { InferActionsTypes } from './reduxStore';\r\nimport { getAuth } from './authReducer';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst actions = {\r\n    initializingSuccess: () => ({ type: 'app/INITIALIZED_SUCCESS' } as const)\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes =  InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action: ActionsTypes):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'app/INITIALIZED_SUCCESS': {\r\n            return { ...state, initialized: true }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    dispatch(getAuth()).then(() => dispatch(actions.initializingSuccess()));\r\n}\r\n\r\nexport default appReducer;","import { FriendType } from './../types/types';\r\nconst initialState = {\r\n  friends: [\r\n    {\r\n      id: 1,\r\n      name: \"Dimych\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Max\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Sveta\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n  ] as FriendType[],\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst navbarReducer = (state = initialState): InitialStateType => {\r\n  return state;\r\n};\r\n\r\nexport default navbarReducer;\r\n","import { Action, applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport findUsersReducer from \"./findUsersReducer\";\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst reducers = combineReducers({\r\n  profile: profileReducer,\r\n  messages: messagesReducer,\r\n  navbar: navbarReducer,\r\n  findUsers: findUsersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport type InferActionsTypes<T> = T extends {[keys: string] : (...args: any[]) => infer U} ? U : never\r\n\r\nexport type ThunkType<A extends Action, R=Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react'\r\n\r\nexport function withSuspense<WCP>(Component: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react'\r\nimport { FriendType } from '../../../types/types'\r\nimport st from './Friends.module.css'\r\n\r\ntype PropsType = {\r\n  friends: FriendType[]\r\n}\r\n\r\nconst Friends: React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div>\r\n      <h3 className={st.title}>FRIENDS</h3>\r\n      {props.friends.map((item) => (\r\n        <div key={item.id} className={st.friends}>\r\n          <div className={st.friend}>\r\n            <img className={st.img} src={item.photo} alt=\"Avatar example\"></img>\r\n            <p className={st.text}>{item.name}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends\r\n","import { connect } from 'react-redux'\r\nimport { AppStateType } from '../../../redux/reduxStore'\r\nimport { FriendType } from '../../../types/types'\r\nimport Friends from './Friends'\r\n\r\ntype MapStatePropsType = {\r\n  friends: FriendType[] \r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    friends: state.navbar.friends\r\n  };\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps)(Friends);\r\n\r\nexport default FriendsContainer;","export default __webpack_public_path__ + \"static/media/search_white.66ea5ec3.svg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport FriendsContainer from './Friends/FriendsContainer'\r\nimport st from './Navbar.module.css'\r\nimport search from './search_white.svg'\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <nav className={st.nav}>\r\n      <NavLink to=\"/profile\" activeClassName={st.active} className={st.item}>\r\n        PROFILE\r\n      </NavLink>\r\n      <NavLink to=\"/dialogs\" activeClassName={st.active} className={st.item}>\r\n        MESSAGES\r\n      </NavLink>\r\n      <NavLink to=\"/news\" activeClassName={st.active} className={st.item}>\r\n        NEWS\r\n      </NavLink>\r\n      <NavLink to=\"/music\" activeClassName={st.active} className={st.item}>\r\n        MUSIC\r\n      </NavLink>\r\n      <NavLink to=\"/users\" activeClassName={st.active} className={st.item}>\r\n        <div className={st.icon}>\r\n          <img src={search} alt=\"serach icon\"/>\r\n          USERS\r\n        </div>\r\n      </NavLink>\r\n      <br />\r\n      <NavLink to=\"/settings\" activeClassName={st.active} className={st.item}>\r\n        SETTINGS\r\n      </NavLink>\r\n      <FriendsContainer />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from './logo.svg'\r\nimport st from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\ntype PropsType = {\r\n  isAuth: boolean,\r\n  login: string | null,\r\n  logout: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = ({isAuth, login, logout}) => {\r\n  return (\r\n    <header className={st.header}>\r\n      <img className={st.logo} src={logo} alt=\"logo\"></img>\r\n      <div className={st.loginBlock}>\r\n        {isAuth\r\n          ? <div className={st.wrapper}>\r\n            <p className={st.login}>{login}</p>\r\n            <button className={st.btn} onClick={logout}>LogOut</button>\r\n          </div>\r\n          : <NavLink className={st.login} to=\"./login\">Login</NavLink>\r\n        }\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/authReducer'\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport { compose } from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean,\r\n    login: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends Component<PropsType> {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, { logout }))\r\n    (HeaderContainer);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter, Route, withRouter, Redirect, Switch } from 'react-router-dom'\r\n// Redux\r\nimport { connect, Provider } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer'\r\nimport { compose } from 'redux';\r\nimport store, { AppStateType } from './redux/reduxStore'\r\n//Styles\r\nimport './App.css'\r\n// HOC\r\nimport { withSuspense } from './hoc/withSuspense'\r\n// Components\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport HeaderContainer from './components/Header/HeaderContainer'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst Login = React.lazy(() => import('./components/Login/Login'))\r\nconst News = React.lazy(() => import('./components/News/News'))\r\nconst Music = React.lazy(() => import('./components/Music/Music'))\r\nconst Settings = React.lazy(() => import('./components/Settings/Settings'))\r\nconst FindUsersContainer = React.lazy(() => import('./components/FindUsers/FindUsersContainer'))\r\nconst SuspendedDialogs = withSuspense(DialogsContainer)\r\nconst SuspendedProfile = withSuspense(ProfileContainer)\r\n\r\n\r\ntype PropsType = {\r\n  initialized: boolean,\r\n  initializeApp: () => void\r\n}\r\n\r\nclass App extends Component<PropsType> {\r\n  catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <React.Suspense fallback={Preloader}>\r\n            <Switch>\r\n              <Route\r\n                exact path=\"/\"\r\n                render={() => <Redirect to=\"/profile\" />}\r\n              />\r\n              <Route\r\n                path=\"/profile/:userId?\"\r\n                render={() => <SuspendedProfile />}\r\n              />\r\n              <Route\r\n                path=\"/dialogs\"\r\n                render={() => <SuspendedDialogs />}\r\n              />\r\n              <Route path=\"/news\" render={() => <News />} />\r\n              <Route path=\"/music\" render={() => <Music />} />\r\n              <Route path=\"/users\" render={() => <FindUsersContainer pageTitle=\"React Social Network Users\"/>} />\r\n              <Route path=\"/settings\" render={() => <Settings />} />\r\n              <Route path=\"/login\" render={() => <Login />} />\r\n            </Switch>\r\n          </React.Suspense>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    initialized: state.app.initialized,\r\n  }\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(withRouter, connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst SocialNetworkApp: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default SocialNetworkApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport SocialNetworkApp from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <SocialNetworkApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n","import { instance } from './api';\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n            .then(response => response.data);\r\n    }\r\n}","import { ResultCodes, ResultCodeForCaptcha, instance, ResponseType } from './api';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype MeResponseDataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\n\r\ntype loginLogoutDataType = {\r\n    userId: number\r\n}\r\n\r\ntype LoginRequestType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: null | string\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<ResponseType<MeResponseDataType>>(`auth/me`)\r\n            .then(response => response.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<LoginRequestType,\r\n            AxiosResponse<ResponseType<loginLogoutDataType, ResultCodes | ResultCodeForCaptcha>>>\r\n            (`auth/login`, { email: email, password: password, rememberMe: rememberMe, captcha: captcha })\r\n            .then(response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType<loginLogoutDataType>>(`auth/login`)\r\n            .then(response => response.data);\r\n    }\r\n}","import { ResultCodes, ResultCodeForCaptcha } from './../api/api';\r\nimport { InferActionsTypes, ThunkType } from './reduxStore';\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { securityAPI } from \"../api/security-api\";\r\nimport { authAPI } from '../api/auth-api';\r\n\r\nconst initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'auth/SET_AUTH_USER_DATA',\r\n        payload: {\r\n            id: userId, email: email, login: login, isAuth: isAuth\r\n        }\r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'auth/GET_CAPTCHA_URL_SUCCESS',\r\n        payload: {\r\n            captchaUrl: captchaUrl\r\n        }\r\n    } as const),\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'auth/SET_AUTH_USER_DATA': {\r\n            return { ...state, ...action.payload }\r\n        }\r\n        case 'auth/GET_CAPTCHA_URL_SUCCESS': {\r\n            return { ...state, ...action.payload }\r\n        } \r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const getAuth = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const meData = await authAPI.me()\r\n    if (meData.resultCode === ResultCodes.Succsess) {\r\n        const { id, email, login } = meData.data\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: null | string): ThunkType<ActionsTypes | ReturnType<typeof stopSubmit>> => async (dispatch) => {\r\n    const loginData = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (loginData.resultCode === ResultCodes.Succsess) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        const message = loginData.messages.length > 0 ? loginData.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    dispatch(actions.getCaptchaUrlSuccess(data.url));\r\n}\r\n\r\nexport const logout = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const logoutData = await authAPI.logout()\r\n    if (logoutData.resultCode === ResultCodes.Succsess) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Friends_title__3_m6N\",\"img\":\"Friends_img__39f52\",\"friends\":\"Friends_friends__2_QgE\",\"friend\":\"Friends_friend__n9T_M\",\"text\":\"Friends_text__1ifn9\"};","export default __webpack_public_path__ + \"static/media/loader.9c48f460.gif\";","import React from 'react'\r\nimport loadingIcon from '../../../assets/img/loader.gif'\r\n\r\nconst Preloader: React.FC = () => {\r\n    return (\r\n      <div>\r\n        <img src={loadingIcon} alt=\"Loading\" style={{ marginLeft: \"200px\" }} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n","import { PhotosType, ProfileType } from './../types/types';\r\nimport { instance, ResponseType } from './api';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype UpdateStatusRequestType = {\r\n    status: string\r\n}\r\n\r\ntype SavePhotoResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileInfo(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<UpdateStatusRequestType, AxiosResponse<ResponseType>>(`profile/status`, { status: status })\r\n            .then(response => response.data);\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put<typeof formData, AxiosResponse<ResponseType<SavePhotoResponseType>>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<ProfileType, AxiosResponse<ResponseType>>(`profile`, profile)\r\n            .then(response => response.data);\r\n    }\r\n}","import { GetStateType } from './../types/types';\r\nimport { ThunkType, InferActionsTypes } from './reduxStore';\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { PostType, PhotosType, ProfileType } from \"../types/types\";\r\nimport { ResultCodes } from '../api/api';\r\n\r\nconst initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"Hi? how are you?\", likeCount: 0 },\r\n    { id: 2, message: \"It's my first post!\", likeCount: 23 },\r\n  ] as PostType[],\r\n  profile: null as ProfileType | null,\r\n  status: \"\"\r\n};\r\n\r\nexport const actions = {\r\n  addPost: (newPostText: string) => ({ type: 'profile/ADD_POST', newPostText: newPostText } as const),\r\n\r\n  deletePost: (postId: number) => ({ type: 'profile/DELETE_POST', postId: postId } as const),\r\n\r\n  setUserProfile: (profile: ProfileType) => ({ type: 'profile/SET_USER_PROFILE', profile } as const),\r\n\r\n  setProfileStatus: (status: string) => ({ type: 'profile/SET_PROFILE_STATUS', status } as const),\r\n\r\n  savePhotoSuccess: (photos: PhotosType) => ({ type: 'profile/SAVE_PHOTO_SUCCESS', photos } as const),\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'profile/ADD_POST': {\r\n      return {\r\n        ...state,\r\n        postsData: [\r\n          ...state.postsData,\r\n          {\r\n            id: state.postsData[state.postsData.length - 1].id + 1,\r\n            message: action.newPostText,\r\n            likeCount: 0,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    case 'profile/DELETE_POST': {\r\n      return { ...state, postsData: state.postsData.filter(post => post.id !== action.postId)}\r\n      }\r\n    case 'profile/SET_USER_PROFILE': {\r\n      return { ...state, profile: action.profile }\r\n    }\r\n    case 'profile/SET_PROFILE_STATUS': {\r\n      return { ...state, status: action.status }\r\n    }\r\n    case 'profile/SAVE_PHOTO_SUCCESS': {\r\n      return { ...state, profile: { ...state.profile, photos: action.photos} as ProfileType }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProfileInfo = (userId: number | null): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.getProfileInfo(userId)\r\n  dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getProfileStatus = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.getStatus(userId)\r\n  dispatch(actions.setProfileStatus(data));\r\n}\r\n\r\nexport const updateProfileStatus = (status: string): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.updateStatus(status)\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actions.setProfileStatus(status));\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.savePhoto(file);\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actions.savePhotoSuccess(data.data.photos));\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType<ActionsTypes | ReturnType<typeof stopSubmit>> => async (dispatch, getState: GetStateType) => {\r\n  const userId = getState().auth.id;\r\n  const data = await profileAPI.saveProfile(profile);\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(getProfileInfo(userId));\r\n  } else {\r\n    dispatch(stopSubmit(\"edit-profile\", { _error: data.messages[0] }));\r\n    return Promise.reject(data.messages[0]);\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import { UserType } from './../types/types';\r\nimport axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'f406f314-0e27-4ae0-9815-6188b0f3b0b0'\r\n    }\r\n})\r\n\r\nexport enum ResultCodes {\r\n    Succsess = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: UserType[],\r\n    totalCount: number,\r\n    error: string | null\r\n}\r\n\r\nexport type ResponseType<D ={}, RC=ResultCodes> = {\r\n    data: D,\r\n    resultCode: RC,\r\n    messages: string[],\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { InferActionsTypes } from './reduxStore';\r\nimport { MessageType, DialogType } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  messagesData: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"Yo\" },\r\n  ] as MessageType[],\r\n  dialogsData: [\r\n    {\r\n      id: 1,\r\n      userName: \"Dimych\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      userName: \"Max\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      userName: \"Anna\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 4,\r\n      userName: \"Sveta\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 5,\r\n      userName: \"Sasha\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 6,\r\n      userName: \"Victor\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n  ] as DialogType[],\r\n};\r\n\r\nexport const actions = {\r\n  sendMessage: (newMessage: string) => ({ type: 'messages/SEND-MESSAGE', newMessage: newMessage } as const)\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst messagesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'messages/SEND-MESSAGE': {\r\n      return {\r\n        ...state,\r\n        messagesData: [\r\n          ...state.messagesData,\r\n          {\r\n            id: state.messagesData[state.messagesData.length - 1].id + 1,\r\n            message: action.newMessage,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messagesReducer;\r\n\r\n","import { instance, GetItemsType } from './api';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype FollowRequestType = {\r\n    userId: number\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<FollowRequestType, AxiosResponse<ResponseType>>(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<FollowRequestType, AxiosResponse<ResponseType>>(`follow/${id}`)\r\n            .then(response => response.data);\r\n    },\r\n}","export const updateObjectInArray = (items, check, objPropName, newObjProps) => {\r\n    return items.map((item) => {\r\n        if (item[objPropName] === check) {\r\n            return { ...item, ...newObjProps };\r\n        }\r\n        return item;\r\n    })\r\n}\r\n","import { ResultCodes } from './../api/api';\r\nimport { InferActionsTypes, ThunkType } from './reduxStore';\r\nimport { UserType } from '../types/types';\r\nimport { userAPI } from '../api/users-api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst initialState = {\r\n  users: [] as UserType[],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as number[]\r\n};\r\n\r\nexport const actions = {\r\n  followSuccess: (userId: number) => ({ type: 'findUsers/FOLLOW_SUCCESS', userId } as const),\r\n\r\n  unfollowSuccess: (userId: number) => ({ type: 'findUsers/UNFOLLOW_SUCCESS', userId } as const),\r\n\r\n  setUsers: (users: UserType[]) => ({ type: 'findUsers/SET_USERS', users } as const),\r\n\r\n  setCurrentPage: (pageNumber: number) => ({\r\n    type: 'findUsers/SET_CURRENT_PAGE',\r\n    pageNumber,\r\n  } as const),\r\n\r\n  setTotalUsersCount: (totalUsersCount: number) => ({\r\n    type: 'findUsers/SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount,\r\n  } as const),\r\n\r\n  setIsFetching: (isFetching: boolean) => ({\r\n    type: 'findUsers/SET_IS_FETCHING',\r\n    isFetching: isFetching,\r\n  } as const),\r\n  setFollowingProgress: (isFollowing: boolean, userId: number) => ({\r\n    type: 'findUsers/SET_FOLLOWING_PROGRESS',\r\n    isFollowing: isFollowing,\r\n    userId: userId\r\n  } as const),\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nexport const findUsersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'findUsers/FOLLOW_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n      };\r\n    }\r\n    case 'findUsers/UNFOLLOW_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n      };\r\n    }\r\n    case 'findUsers/SET_USERS': {\r\n      return { ...state, users: action.users };\r\n    }\r\n    case 'findUsers/SET_CURRENT_PAGE': {\r\n      return { ...state, currentPage: action.pageNumber };\r\n    }\r\n    case 'findUsers/SET_TOTAL_USERS_COUNT': {\r\n      return { ...state, totalUsersCount: action.count };\r\n    }\r\n    case 'findUsers/SET_IS_FETCHING': {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case 'findUsers/SET_FOLLOWING_PROGRESS': {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFollowing\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  dispatch(actions.setIsFetching(true));\r\n  dispatch(actions.setCurrentPage(page));\r\n  const data = await userAPI.getUsers(page, pageSize);\r\n  dispatch(actions.setIsFetching(false));\r\n  dispatch(actions.setUsers(data.items));\r\n  dispatch(actions.setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, apiMethod: any, userId: number, actionCreator: (userId: number) => ActionsTypes) => {\r\n  dispatch(actions.setFollowingProgress(true, userId));\r\n  const data = await apiMethod(userId);\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(actions.setFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  await _followUnfollowFlow(dispatch, userAPI.follow.bind(userAPI), userId, actions.followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  await _followUnfollowFlow(dispatch, userAPI.unfollow.bind(userAPI), userId, actions.unfollowSuccess);\r\n}\r\n\r\nexport default findUsersReducer;\r\n"],"sourceRoot":""}