{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Header/Header.module.css","redux/appReducer.ts","redux/navbarReducer.ts","redux/reduxStore.tsx","redux/selectors/appSelectors.ts","redux/selectors/navbarSelectors.ts","components/Navbar/Friends/Friends.tsx","components/Navbar/search_white.svg","components/Navbar/Navbar.tsx","components/Header/logo.svg","components/Header/Header.tsx","App.tsx","index.js","api/security-api.ts","api/auth-api.ts","redux/authReducer.ts","components/Navbar/Friends/Friends.module.css","assets/img/loader.gif","components/common/Preloader/Preloader.tsx","redux/selectors/authSelectors.ts","api/profile-api.ts","redux/profileReducer.ts","api/users-api.ts","utils/object-helpers.js","redux/findUsersReducer.ts","api/api.ts","redux/messagesReducer.ts"],"names":["module","exports","initialState","initialized","actions","type","appReducer","state","action","friends","id","name","photo","navbarReducer","reducers","combineReducers","profile","profileReducer","messages","messagesReducer","navbar","findUsers","findUsersReducer","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","getAppInitialized","getFriends","Friends","useSelector","className","st","title","map","item","friend","img","src","alt","text","Navbar","nav","to","activeClassName","active","icon","search","Header","dispatch","useDispatch","login","getLogin","isAuth","getIsAuth","header","logo","loginBlock","wrapper","btn","onClick","logout","Dialogs","React","lazy","ProfileContainer","Login","News","Music","Settings","FindUsers","AppContainer","compose","withRouter","useEffect","getAuth","then","Suspense","fallback","Preloader","exact","path","render","pageTitle","SocialNetworkApp","ReactDOM","StrictMode","document","getElementById","securityAPI","instance","get","response","data","authAPI","email","password","rememberMe","captcha","post","delete","captchaUrl","userId","payload","a","meData","resultCode","ResultCodes","Succsess","loginData","ResultCodeForCaptcha","CaptchaIsRequired","getCaptchaUrl","message","length","stopSubmit","_error","url","loadingIcon","style","marginLeft","profileAPI","status","put","photoFile","formData","FormData","append","headers","postsData","likeCount","addPost","newPostText","deletePost","postId","setUserProfile","setProfileStatus","savePhotoSuccess","photos","getProfileInfo","getProfileStatus","updateProfileStatus","savePhoto","file","saveProfile","getState","Promise","reject","filter","userAPI","getUsers","follow","unfollow","updateObjectInArray","items","check","objPropName","newObjProps","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","term","pageNumber","count","isFollowing","requestUsers","page","totalCount","_followUnfollowFlow","apiMethod","actionCreator","bind","followed","axios","create","baseURL","withCredentials","messagesData","dialogsData","userName","sendMessage","newMessage"],"mappings":"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","file":"static/js/main.e9e637cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__iAsk2\",\"item\":\"Navbar_item__26SM4\",\"active\":\"Navbar_active__2enci\",\"icon\":\"Navbar_icon__Qc7ak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Jm1RZ\",\"logo\":\"Header_logo__3vvBu\",\"loginBlock\":\"Header_loginBlock__29PXN\",\"login\":\"Header_login__1HUgF\",\"wrapper\":\"Header_wrapper__u1Ixr\",\"btn\":\"Header_btn__2eD-s\"};","import { InferActionsTypes } from './reduxStore';\r\nimport { getAuth } from './authReducer';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst actions = {\r\n    initializingSuccess: () => ({ type: 'app/INITIALIZED_SUCCESS' } as const)\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes =  InferActionsTypes<typeof actions>\r\n\r\nconst appReducer = (state = initialState, action: ActionsTypes):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'app/INITIALIZED_SUCCESS': {\r\n            return { ...state, initialized: true }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    dispatch(getAuth()).then(() => dispatch(actions.initializingSuccess()));\r\n}\r\n\r\nexport default appReducer;","import { FriendType } from './../types/types';\r\nconst initialState = {\r\n  friends: [\r\n    {\r\n      id: 1,\r\n      name: \"Dimych\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Max\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Sveta\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n  ] as FriendType[],\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst navbarReducer = (state = initialState): InitialStateType => {\r\n  return state;\r\n};\r\n\r\nexport default navbarReducer;\r\n","import { Action, applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport profileReducer from \"./profileReducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport navbarReducer from \"./navbarReducer\";\r\nimport findUsersReducer from \"./findUsersReducer\";\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nconst reducers = combineReducers({\r\n  profile: profileReducer,\r\n  messages: messagesReducer,\r\n  navbar: navbarReducer,\r\n  findUsers: findUsersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport type InferActionsTypes<T> = T extends {[keys: string] : (...args: any[]) => infer U} ? U : never\r\n\r\nexport type ThunkType<A extends Action, R=Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import { AppStateType } from '../reduxStore'\r\n\r\nexport const getAppInitialized = (state: AppStateType) => {\r\n    return state.app.initialized\r\n}","import { AppStateType } from '../reduxStore';\r\n\r\nexport const getFriends = (state: AppStateType) => {\r\n    return state.navbar.friends\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { getFriends } from '../../../redux/selectors/navbarSelectors';\r\nimport st from './Friends.module.css'\r\n\r\nconst Friends: React.FC = () => {\r\n  const friends = useSelector(getFriends)\r\n  return (\r\n    <div>\r\n      <h3 className={st.title}>FRIENDS</h3>\r\n      {friends.map((item) => (\r\n        <div key={item.id} className={st.friends}>\r\n          <div className={st.friend}>\r\n            <img className={st.img} src={item.photo} alt=\"Avatar example\"></img>\r\n            <p className={st.text}>{item.name}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Friends\r\n","export default __webpack_public_path__ + \"static/media/search_white.66ea5ec3.svg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Friends from './Friends/Friends'\r\nimport st from './Navbar.module.css'\r\nimport search from './search_white.svg'\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <nav className={st.nav}>\r\n      <NavLink to=\"/profile\" activeClassName={st.active} className={st.item}>\r\n        PROFILE\r\n      </NavLink>\r\n      <NavLink to=\"/dialogs\" activeClassName={st.active} className={st.item}>\r\n        MESSAGES\r\n      </NavLink>\r\n      <NavLink to=\"/news\" activeClassName={st.active} className={st.item}>\r\n        NEWS\r\n      </NavLink>\r\n      <NavLink to=\"/music\" activeClassName={st.active} className={st.item}>\r\n        MUSIC\r\n      </NavLink>\r\n      <NavLink to=\"/users\" activeClassName={st.active} className={st.item}>\r\n        <div className={st.icon}>\r\n          <img src={search} alt=\"serach icon\"/>\r\n          USERS\r\n        </div>\r\n      </NavLink>\r\n      <br />\r\n      <NavLink to=\"/settings\" activeClassName={st.active} className={st.item}>\r\n        SETTINGS\r\n      </NavLink>\r\n      <Friends />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from './logo.svg'\r\nimport { NavLink } from 'react-router-dom'\r\n// Styles\r\nimport st from './Header.module.css'\r\n// Redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../../redux/authReducer'\r\nimport { getIsAuth, getLogin } from '../../redux/selectors/authSelectors'\r\n\r\nconst Header: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const login = useSelector(getLogin)\r\n  const isAuth = useSelector(getIsAuth)\r\n  return (\r\n    <header className={st.header}>\r\n      <img className={st.logo} src={logo} alt=\"logo\"></img>\r\n      <div className={st.loginBlock}>\r\n        {isAuth\r\n          ? <div className={st.wrapper}>\r\n            <p className={st.login}>{login}</p>\r\n            <button className={st.btn} onClick={dispatch(logout)}>LogOut</button>\r\n          </div>\r\n          : <NavLink className={st.login} to=\"./login\">Login</NavLink>\r\n        }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { useEffect } from 'react'\r\nimport { BrowserRouter, Route, withRouter, Redirect, Switch } from 'react-router-dom'\r\n// Redux\r\nimport { Provider, useDispatch, useSelector } from 'react-redux';\r\nimport { initializeApp } from './redux/appReducer'\r\nimport { compose } from 'redux';\r\nimport store from './redux/reduxStore'\r\nimport { getAppInitialized } from './redux/selectors/appSelectors'\r\n//Styles\r\nimport './App.css'\r\nimport 'antd/dist/antd.css'\r\n// Components\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Header from './components/Header/Header'\r\nimport Preloader from './components/common/Preloader/Preloader'\r\nconst Dialogs = React.lazy(() => import('./components/Dialogs/Dialogs'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\nconst Login = React.lazy(() => import('./components/Login/Login'))\r\nconst News = React.lazy(() => import('./components/News/News'))\r\nconst Music = React.lazy(() => import('./components/Music/Music'))\r\nconst Settings = React.lazy(() => import('./components/Settings/Settings'))\r\nconst FindUsers = React.lazy(() => import('./components/FindUsers/FindUsers'))\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(initializeApp())\r\n  }, [])\r\n\r\n  const initialized = useSelector(getAppInitialized)\r\n\r\n  if (!initialized) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-wrapper\">\r\n      <Header />\r\n      <Navbar />\r\n      <div className=\"app-wrapper-content\">\r\n        <React.Suspense fallback={Preloader}>\r\n          <Switch>\r\n            <Route\r\n              exact path=\"/\"\r\n              render={() => <Redirect to=\"/profile\" />}\r\n            />\r\n            <Route\r\n              path=\"/profile/:userId?\"\r\n              render={() => <ProfileContainer />}\r\n            />\r\n            <Route\r\n              path=\"/dialogs\"\r\n              render={() => <Dialogs />}\r\n            />\r\n            <Route path=\"/news\" render={() => <News />} />\r\n            <Route path=\"/music\" render={() => <Music />} />\r\n            <Route path=\"/users\" render={() => <FindUsers pageTitle=\"React Social Network Users\" />} />\r\n            <Route path=\"/settings\" render={() => <Settings />} />\r\n            <Route path=\"/login\" render={() => <Login />} />\r\n          </Switch>\r\n        </React.Suspense>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AppContainer = compose<React.ComponentType>(withRouter)(App);\r\n\r\nconst SocialNetworkApp: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default SocialNetworkApp\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport SocialNetworkApp from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <SocialNetworkApp />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n\r\n","import { instance } from './api';\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`)\r\n            .then(response => response.data);\r\n    }\r\n}","import { ResultCodes, ResultCodeForCaptcha, instance, ResponseType } from './api';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype MeResponseDataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\n\r\ntype loginLogoutDataType = {\r\n    userId: number\r\n}\r\n\r\ntype LoginRequestType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: null | string\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<ResponseType<MeResponseDataType>>(`auth/me`)\r\n            .then(response => response.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<LoginRequestType,\r\n            AxiosResponse<ResponseType<loginLogoutDataType, ResultCodes | ResultCodeForCaptcha>>>\r\n            (`auth/login`, { email: email, password: password, rememberMe: rememberMe, captcha: captcha })\r\n            .then(response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete<ResponseType<loginLogoutDataType>>(`auth/login`)\r\n            .then(response => response.data);\r\n    }\r\n}","import { ResultCodes, ResultCodeForCaptcha } from './../api/api';\r\nimport { InferActionsTypes, ThunkType } from './reduxStore';\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { securityAPI } from \"../api/security-api\";\r\nimport { authAPI } from '../api/auth-api';\r\n\r\nconst initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'auth/SET_AUTH_USER_DATA',\r\n        payload: {\r\n            id: userId, email: email, login: login, isAuth: isAuth\r\n        }\r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'auth/GET_CAPTCHA_URL_SUCCESS',\r\n        payload: {\r\n            captchaUrl: captchaUrl\r\n        }\r\n    } as const),\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'auth/SET_AUTH_USER_DATA': {\r\n            return { ...state, ...action.payload }\r\n        }\r\n        case 'auth/GET_CAPTCHA_URL_SUCCESS': {\r\n            return { ...state, ...action.payload }\r\n        } \r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const getAuth = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const meData = await authAPI.me()\r\n    if (meData.resultCode === ResultCodes.Succsess) {\r\n        const { id, email, login } = meData.data\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: null | string): ThunkType<ActionsTypes | ReturnType<typeof stopSubmit>> => async (dispatch) => {\r\n    const loginData = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (loginData.resultCode === ResultCodes.Succsess) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        if (loginData.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        const message = loginData.messages.length > 0 ? loginData.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl()\r\n    dispatch(actions.getCaptchaUrlSuccess(data.url));\r\n}\r\n\r\nexport const logout = (): ThunkType<ActionsTypes> => async (dispatch) => {\r\n    const logoutData = await authAPI.logout()\r\n    if (logoutData.resultCode === ResultCodes.Succsess) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Friends_title__3_m6N\",\"img\":\"Friends_img__39f52\",\"friends\":\"Friends_friends__2_QgE\",\"friend\":\"Friends_friend__n9T_M\",\"text\":\"Friends_text__1ifn9\"};","export default __webpack_public_path__ + \"static/media/loader.9c48f460.gif\";","import React from 'react'\r\nimport loadingIcon from '../../../assets/img/loader.gif'\r\n\r\nconst Preloader: React.FC = () => {\r\n    return (\r\n      <div>\r\n        <img src={loadingIcon} alt=\"Loading\" style={{ marginLeft: \"200px\" }} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Preloader;\r\n","import { AppStateType } from '../reduxStore';\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getLogin = (state: AppStateType) => {\r\n    return state.auth.login\r\n}\r\n\r\nexport const getCaptchaUrl = (state: AppStateType) => {\r\n    return state.auth.captchaUrl\r\n}","import { PhotosType, ProfileType } from './../types/types';\r\nimport { instance, ResponseType } from './api';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ntype UpdateStatusRequestType = {\r\n    status: string\r\n}\r\n\r\ntype SavePhotoResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileInfo(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<UpdateStatusRequestType, AxiosResponse<ResponseType>>(`profile/status`, { status: status })\r\n            .then(response => response.data);\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put<typeof formData, AxiosResponse<ResponseType<SavePhotoResponseType>>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<ProfileType, AxiosResponse<ResponseType>>(`profile`, profile)\r\n            .then(response => response.data);\r\n    }\r\n}","import { GetStateType } from './../types/types';\r\nimport { ThunkType, InferActionsTypes } from './reduxStore';\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { PostType, PhotosType, ProfileType } from \"../types/types\";\r\nimport { ResultCodes } from '../api/api';\r\n\r\nconst initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"Hi? how are you?\", likeCount: 0 },\r\n    { id: 2, message: \"It's my first post!\", likeCount: 23 },\r\n  ] as PostType[],\r\n  profile: null as ProfileType | null,\r\n  status: \"\"\r\n};\r\n\r\nexport const actions = {\r\n  addPost: (newPostText: string) => ({ type: 'profile/ADD_POST', newPostText: newPostText } as const),\r\n\r\n  deletePost: (postId: number) => ({ type: 'profile/DELETE_POST', postId: postId } as const),\r\n\r\n  setUserProfile: (profile: ProfileType) => ({ type: 'profile/SET_USER_PROFILE', profile } as const),\r\n\r\n  setProfileStatus: (status: string) => ({ type: 'profile/SET_PROFILE_STATUS', status } as const),\r\n\r\n  savePhotoSuccess: (photos: PhotosType) => ({ type: 'profile/SAVE_PHOTO_SUCCESS', photos } as const),\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'profile/ADD_POST': {\r\n      return {\r\n        ...state,\r\n        postsData: [\r\n          ...state.postsData,\r\n          {\r\n            id: state.postsData[state.postsData.length - 1].id + 1,\r\n            message: action.newPostText,\r\n            likeCount: 0,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    case 'profile/DELETE_POST': {\r\n      return { ...state, postsData: state.postsData.filter(post => post.id !== action.postId)}\r\n      }\r\n    case 'profile/SET_USER_PROFILE': {\r\n      return { ...state, profile: action.profile }\r\n    }\r\n    case 'profile/SET_PROFILE_STATUS': {\r\n      return { ...state, status: action.status }\r\n    }\r\n    case 'profile/SAVE_PHOTO_SUCCESS': {\r\n      return { ...state, profile: { ...state.profile, photos: action.photos} as ProfileType }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProfileInfo = (userId: number | null): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.getProfileInfo(userId)\r\n  dispatch(actions.setUserProfile(data));\r\n}\r\n\r\nexport const getProfileStatus = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.getStatus(userId)\r\n  dispatch(actions.setProfileStatus(data));\r\n}\r\n\r\nexport const updateProfileStatus = (status: string): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.updateStatus(status)\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actions.setProfileStatus(status));\r\n  }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  const data = await profileAPI.savePhoto(file);\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actions.savePhotoSuccess(data.data.photos));\r\n  }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType<ActionsTypes | ReturnType<typeof stopSubmit>> => async (dispatch, getState: GetStateType) => {\r\n  const userId = getState().auth.id;\r\n  const data = await profileAPI.saveProfile(profile);\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(getProfileInfo(userId));\r\n  } else {\r\n    dispatch(stopSubmit(\"edit-profile\", { _error: data.messages[0] }));\r\n    return Promise.reject(data.messages[0]);\r\n  }\r\n}\r\n\r\nexport default profileReducer;","import { instance, GetItemsType } from './api'\r\nimport { AxiosResponse } from 'axios'\r\n\r\ntype FollowRequestType = {\r\n    userId: number\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10, term = '', friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}`\r\n            + (friend === null) ? '' : `&friend=${friend}`\r\n        )\r\n            .then(response => response.data)\r\n    },\r\n    follow(id: number) {\r\n        return instance.post<FollowRequestType, AxiosResponse<ResponseType>>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete<FollowRequestType, AxiosResponse<ResponseType>>(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n}","export const updateObjectInArray = (items, check, objPropName, newObjProps) => {\r\n    return items.map((item) => {\r\n        if (item[objPropName] === check) {\r\n            return { ...item, ...newObjProps };\r\n        }\r\n        return item;\r\n    })\r\n}\r\n","import { ResultCodes } from './../api/api'\r\nimport { InferActionsTypes, ThunkType } from './reduxStore'\r\nimport { UserType } from '../types/types'\r\nimport { userAPI } from '../api/users-api'\r\nimport { updateObjectInArray } from '../utils/object-helpers'\r\nimport { Dispatch } from 'redux'\r\n\r\nconst initialState = {\r\n  users: [] as UserType[],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [] as number[],\r\n  filter: {\r\n    term: '',\r\n    friend: null as null | boolean\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  followSuccess: (userId: number) => ({ type: 'findUsers/FOLLOW_SUCCESS', userId } as const),\r\n\r\n  unfollowSuccess: (userId: number) => ({ type: 'findUsers/UNFOLLOW_SUCCESS', userId } as const),\r\n\r\n  setUsers: (users: UserType[]) => ({ type: 'findUsers/SET_USERS', users } as const),\r\n\r\n  setCurrentPage: (pageNumber: number) => ({\r\n    type: 'findUsers/SET_CURRENT_PAGE',\r\n    pageNumber,\r\n  } as const),\r\n\r\n  setTotalUsersCount: (totalUsersCount: number) => ({\r\n    type: 'findUsers/SET_TOTAL_USERS_COUNT',\r\n    count: totalUsersCount,\r\n  } as const),\r\n\r\n  setIsFetching: (isFetching: boolean) => ({\r\n    type: 'findUsers/SET_IS_FETCHING',\r\n    isFetching: isFetching,\r\n  } as const),\r\n  setFollowingProgress: (isFollowing: boolean, userId: number) => ({\r\n    type: 'findUsers/SET_FOLLOWING_PROGRESS',\r\n    isFollowing: isFollowing,\r\n    userId: userId\r\n  } as const),\r\n  setFilter: (filter: FilterType) => ({\r\n    type: 'findUsers/SET_FILTER',\r\n    payload: filter\r\n  } as const)\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport type FilterType = typeof initialState.filter\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nexport const findUsersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'findUsers/FOLLOW_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n      };\r\n    }\r\n    case 'findUsers/UNFOLLOW_SUCCESS': {\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n      };\r\n    }\r\n    case 'findUsers/SET_USERS': {\r\n      return { ...state, users: action.users }\r\n    }\r\n    case 'findUsers/SET_CURRENT_PAGE': {\r\n      return { ...state, currentPage: action.pageNumber }\r\n    }\r\n    case 'findUsers/SET_TOTAL_USERS_COUNT': {\r\n      return { ...state, totalUsersCount: action.count }\r\n    }\r\n    case 'findUsers/SET_IS_FETCHING': {\r\n      return { ...state, isFetching: action.isFetching }\r\n    }\r\n    case 'findUsers/SET_FOLLOWING_PROGRESS': {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFollowing\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      };\r\n    }\r\n    case 'findUsers/SET_FILTER': {\r\n      return {\r\n        ...state,\r\n        filter: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  dispatch(actions.setIsFetching(true))\r\n  dispatch(actions.setCurrentPage(page))\r\n  dispatch(actions.setFilter(filter))\r\n  const data = await userAPI.getUsers(page, pageSize, filter.term, filter.friend)\r\n  dispatch(actions.setIsFetching(false))\r\n  dispatch(actions.setUsers(data.items))\r\n  dispatch(actions.setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, apiMethod: any, userId: number, actionCreator: (userId: number) => ActionsTypes) => {\r\n  dispatch(actions.setFollowingProgress(true, userId))\r\n  const data = await apiMethod(userId)\r\n  if (data.resultCode === ResultCodes.Succsess) {\r\n    dispatch(actionCreator(userId))\r\n  }\r\n  dispatch(actions.setFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  await _followUnfollowFlow(dispatch, userAPI.follow.bind(userAPI), userId, actions.followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType<ActionsTypes> => async (dispatch) => {\r\n  await _followUnfollowFlow(dispatch, userAPI.unfollow.bind(userAPI), userId, actions.unfollowSuccess)\r\n}\r\n\r\nexport default findUsersReducer\r\n","import { UserType } from './../types/types';\r\nimport axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'f406f314-0e27-4ae0-9815-6188b0f3b0b0'\r\n    }\r\n})\r\n\r\nexport enum ResultCodes {\r\n    Succsess = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport enum ResultCodeForCaptcha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type GetItemsType = {\r\n    items: UserType[],\r\n    totalCount: number,\r\n    error: string | null\r\n}\r\n\r\nexport type ResponseType<D ={}, RC=ResultCodes> = {\r\n    data: D,\r\n    resultCode: RC,\r\n    messages: string[],\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { InferActionsTypes } from './reduxStore';\r\nimport { MessageType, DialogType } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  messagesData: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you?\" },\r\n    { id: 3, message: \"Yo\" },\r\n  ] as MessageType[],\r\n  dialogsData: [\r\n    {\r\n      id: 1,\r\n      userName: \"Dimych\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      userName: \"Max\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      userName: \"Anna\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 4,\r\n      userName: \"Sveta\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 5,\r\n      userName: \"Sasha\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n    {\r\n      id: 6,\r\n      userName: \"Victor\",\r\n      photo:\r\n        \"https://st2.depositphotos.com/3873339/8013/i/600/depositphotos_80131050-stock-photo-realistic-square-picture-frame-on.jpg\",\r\n    },\r\n  ] as DialogType[],\r\n};\r\n\r\nexport const actions = {\r\n  sendMessage: (newMessage: string) => ({ type: 'messages/SEND-MESSAGE', newMessage: newMessage } as const)\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst messagesReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'messages/SEND-MESSAGE': {\r\n      return {\r\n        ...state,\r\n        messagesData: [\r\n          ...state.messagesData,\r\n          {\r\n            id: state.messagesData[state.messagesData.length - 1].id + 1,\r\n            message: action.newMessage,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messagesReducer;\r\n\r\n"],"sourceRoot":""}